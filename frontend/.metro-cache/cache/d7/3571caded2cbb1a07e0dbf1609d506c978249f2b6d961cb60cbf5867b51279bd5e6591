{"dependencies":[{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":69,"index":69}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":70},"end":{"line":2,"column":102,"index":172}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../constants/api","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":173},"end":{"line":3,"column":74,"index":247}}],"key":"ZV0ujAFjHVGmM4aJSYIlDaiTRjE=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/workspaces/Health-Tracker/frontend/context/AuthContext.tsx\"; // Types\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.AuthProvider = AuthProvider;\n  exports.useAuth = useAuth;\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[0], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _constantsApi = require(_dependencyMap[2], \"../constants/api\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  // Create context\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  (0, _constantsApi.warnIfUsingFallback)();\n  function ensureBaseUrl() {\n    return (0, _constantsApi.getBackendBaseUrl)();\n  }\n  async function safeParseJSON(response) {\n    const contentType = response.headers.get('content-type') || '';\n    const text = await response.text();\n    if (!contentType.includes('application/json')) {\n      // Intentar detectar HTML dev server / error proxy\n      if (text.trim().startsWith('<!DOCTYPE') || text.trim().startsWith('<html')) {\n        throw new Error('El servidor devolvió HTML en lugar de JSON. Revisa la URL del backend o CORS.');\n      }\n      // Intento final: tratar de parsear aunque no haya content-type adecuado\n      try {\n        return JSON.parse(text);\n      } catch {\n        throw new Error('Respuesta no es JSON válido.');\n      }\n    }\n    try {\n      return JSON.parse(text);\n    } catch {\n      throw new Error('No se pudo parsear JSON (posible HTML o error de servidor).');\n    }\n  }\n\n  // Auth Provider Component\n  function AuthProvider({\n    children\n  }) {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [loading, setLoading] = (0, _react.useState)(true);\n    const logout = (0, _react.useCallback)(async () => {\n      try {\n        // Limpiar AsyncStorage\n        await AsyncStorage.default.removeItem('auth_token');\n        await AsyncStorage.default.removeItem('user_data');\n      } catch (error) {\n        console.error('Error clearing storage:', error);\n      }\n\n      // Limpiar estado del contexto\n      setToken(null);\n      setUser(null);\n      console.log('Logout successful - user logged out');\n    }, []);\n    const verifyToken = (0, _react.useCallback)(async authToken => {\n      try {\n        const base = ensureBaseUrl();\n        // Try /api/auth/me first (for server.py), then fallback to /auth/me (for server_basic.py)\n        let response = await fetch(`${base}/api/auth/me`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json'\n          }\n        });\n\n        // If /api/auth/me fails with 404, try direct /auth/me\n        if (!response.ok && response.status === 404) {\n          response = await fetch(`${base}/auth/me`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n        if (!response.ok) {\n          throw new Error('Token invalid');\n        }\n        const userData = await safeParseJSON(response);\n        setUser(userData);\n      } catch (error) {\n        console.error('Token verification failed:', error);\n        await logout();\n      }\n    }, [logout]);\n    const loadStoredAuth = (0, _react.useCallback)(async () => {\n      try {\n        const storedToken = await AsyncStorage.default.getItem('auth_token');\n        const storedUser = await AsyncStorage.default.getItem('user_data');\n        if (storedToken && storedUser) {\n          setToken(storedToken);\n          setUser(JSON.parse(storedUser));\n\n          // Verify token is still valid\n          await verifyToken(storedToken);\n        }\n      } catch (error) {\n        console.error('Error loading stored auth:', error);\n        await logout();\n      } finally {\n        setLoading(false);\n      }\n    }, [verifyToken, logout]);\n\n    // Load stored auth data on app start\n    (0, _react.useEffect)(() => {\n      loadStoredAuth();\n    }, [loadStoredAuth]);\n\n    // (verifyToken ya definido arriba con useCallback)\n\n    const login = async (email, password) => {\n      try {\n        const base = ensureBaseUrl();\n        // Try /api/auth/login first (for server.py), then fallback to /auth/login (for server_basic.py)\n        let response = await fetch(`${base}/api/auth/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: email,\n            password\n          })\n        });\n\n        // If /api/auth/login fails with 404, try direct /auth/login\n        if (!response.ok && response.status === 404) {\n          response = await fetch(`${base}/auth/login`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              username: email,\n              password\n            })\n          });\n        }\n        let data;\n        try {\n          data = await safeParseJSON(response);\n        } catch (parseErr) {\n          throw new Error(parseErr.message || 'Error parseando respuesta');\n        }\n        if (!response.ok) {\n          // Mejorar el manejo de errores para evitar [object Object]\n          let errorMessage = 'Error al iniciar sesión';\n          if (data?.detail) {\n            errorMessage = typeof data.detail === 'string' ? data.detail : 'Credenciales inválidas';\n          } else if (data?.message) {\n            errorMessage = typeof data.message === 'string' ? data.message : 'Error del servidor';\n          }\n          throw new Error(errorMessage);\n        }\n\n        // El backend no devuelve user, así que lo sintetizamos\n        const synthesizedUser = {\n          id: data.user?.id || email,\n          email,\n          name: data.user?.name || email.split('@')[0],\n          has_gemini_key: data.user?.has_gemini_key ?? false\n        };\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('user_data', JSON.stringify(synthesizedUser));\n        setToken(data.access_token);\n        setUser(synthesizedUser);\n      } catch (error) {\n        console.error('Error en login:', error);\n        // Mejor manejo de errores para evitar [object Object]\n        let errorMessage = 'Error de conexión';\n        if (error?.message) {\n          errorMessage = error.message;\n        } else if (typeof error === 'string') {\n          errorMessage = error;\n        } else if (error?.name === 'TypeError' && error?.message?.includes('fetch')) {\n          errorMessage = 'No se pudo conectar con el servidor. Verifica tu conexión.';\n        }\n        throw new Error(errorMessage);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        const base = ensureBaseUrl();\n        // Try /api/auth/register first (for server.py), then fallback to /auth/register (for server_basic.py)\n        let response = await fetch(`${base}/api/auth/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: name.trim() || email.split('@')[0],\n            email,\n            password\n          })\n        });\n\n        // If /api/auth/register fails with 404, try direct /auth/register\n        if (!response.ok && response.status === 404) {\n          response = await fetch(`${base}/auth/register`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              username: name.trim() || email.split('@')[0],\n              email,\n              password\n            })\n          });\n        }\n        let data;\n        try {\n          data = await safeParseJSON(response);\n        } catch (parseErr) {\n          throw new Error(parseErr.message || 'Error parseando respuesta');\n        }\n        if (!response.ok) {\n          // Mejorar el manejo de errores para evitar [object Object]\n          let errorMessage = 'Error al registrarse';\n          if (data?.detail) {\n            errorMessage = typeof data.detail === 'string' ? data.detail : 'Error de validación';\n          } else if (data?.message) {\n            errorMessage = typeof data.message === 'string' ? data.message : 'Error del servidor';\n          }\n          throw new Error(errorMessage);\n        }\n        const synthesizedUser = {\n          id: data.user?.id || email,\n          email,\n          name: name || email.split('@')[0],\n          has_gemini_key: false\n        };\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('user_data', JSON.stringify(synthesizedUser));\n        setToken(data.access_token);\n        setUser(synthesizedUser);\n      } catch (error) {\n        console.error('Error en registro:', error);\n        // Mejor manejo de errores para evitar [object Object]\n        let errorMessage = 'Error de conexión';\n        if (error?.message) {\n          errorMessage = error.message;\n        } else if (typeof error === 'string') {\n          errorMessage = error;\n        } else if (error?.name === 'TypeError' && error?.message?.includes('fetch')) {\n          errorMessage = 'No se pudo conectar con el servidor. Verifica tu conexión.';\n        }\n        throw new Error(errorMessage);\n      }\n    };\n\n    // (logout ya definido arriba con useCallback)\n\n    const updateUser = userData => {\n      if (user) {\n        const updatedUser = {\n          ...user,\n          ...userData\n        };\n        setUser(updatedUser);\n        AsyncStorage.default.setItem('user_data', JSON.stringify(updatedUser));\n      }\n    };\n    const value = {\n      user,\n      token,\n      loading,\n      login,\n      register,\n      logout,\n      updateUser\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 5\n    }, this);\n  }\n\n  // Hook to use auth context\n  function useAuth() {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  }\n});","lineCount":305,"map":[[4,84,5,0],[5,2,5,0,"Object"],[5,8,5,0],[5,9,5,0,"defineProperty"],[5,23,5,0],[5,24,5,0,"exports"],[5,31,5,0],[6,4,5,0,"value"],[6,9,5,0],[7,2,5,0],[8,2,5,0],[8,11,5,0,"_interopDefault"],[8,27,5,0,"e"],[8,28,5,0],[9,4,5,0],[9,11,5,0,"e"],[9,12,5,0],[9,16,5,0,"e"],[9,17,5,0],[9,18,5,0,"__esModule"],[9,28,5,0],[9,31,5,0,"e"],[9,32,5,0],[10,6,5,0,"default"],[10,13,5,0],[10,15,5,0,"e"],[11,4,5,0],[12,2,5,0],[13,2,57,0,"exports"],[13,9,57,0],[13,10,57,0,"AuthProvider"],[13,22,57,0],[13,25,57,0,"AuthProvider"],[13,37,57,0],[14,2,302,0,"exports"],[14,9,302,0],[14,10,302,0,"useAuth"],[14,17,302,0],[14,20,302,0,"useAuth"],[14,27,302,0],[15,2,1,0],[15,6,1,0,"_reactNativeAsyncStorageAsyncStorage"],[15,42,1,0],[15,45,1,0,"require"],[15,52,1,0],[15,53,1,0,"_dependencyMap"],[15,67,1,0],[16,2,1,0],[16,6,1,0,"AsyncStorage"],[16,18,1,0],[16,21,1,0,"_interopDefault"],[16,36,1,0],[16,37,1,0,"_reactNativeAsyncStorageAsyncStorage"],[16,73,1,0],[17,2,2,0],[17,6,2,0,"_react"],[17,12,2,0],[17,15,2,0,"require"],[17,22,2,0],[17,23,2,0,"_dependencyMap"],[17,37,2,0],[18,2,3,0],[18,6,3,0,"_constantsApi"],[18,19,3,0],[18,22,3,0,"require"],[18,29,3,0],[18,30,3,0,"_dependencyMap"],[18,44,3,0],[19,2,3,74],[19,6,3,74,"_reactJsxDevRuntime"],[19,25,3,74],[19,28,3,74,"require"],[19,35,3,74],[19,36,3,74,"_dependencyMap"],[19,50,3,74],[20,2,23,0],[21,2,24,0],[21,8,24,6,"AuthContext"],[21,19,24,17],[21,35,24,20],[21,39,24,20,"createContext"],[21,45,24,33],[21,46,24,33,"createContext"],[21,59,24,33],[21,61,24,63,"undefined"],[21,70,24,72],[21,71,24,73],[22,2,26,0],[22,6,26,0,"warnIfUsingFallback"],[22,19,26,19],[22,20,26,19,"warnIfUsingFallback"],[22,39,26,19],[22,41,26,20],[22,42,26,21],[23,2,28,0],[23,11,28,9,"ensureBaseUrl"],[23,24,28,22,"ensureBaseUrl"],[23,25,28,22],[23,27,28,33],[24,4,29,2],[24,11,29,9],[24,15,29,9,"getBackendBaseUrl"],[24,28,29,26],[24,29,29,26,"getBackendBaseUrl"],[24,46,29,26],[24,48,29,27],[24,49,29,28],[25,2,30,0],[26,2,32,0],[26,17,32,15,"safeParseJSON"],[26,30,32,28,"safeParseJSON"],[26,31,32,29,"response"],[26,39,32,47],[26,41,32,49],[27,4,33,2],[27,10,33,8,"contentType"],[27,21,33,19],[27,24,33,22,"response"],[27,32,33,30],[27,33,33,31,"headers"],[27,40,33,38],[27,41,33,39,"get"],[27,44,33,42],[27,45,33,43],[27,59,33,57],[27,60,33,58],[27,64,33,62],[27,66,33,64],[28,4,34,2],[28,10,34,8,"text"],[28,14,34,12],[28,17,34,15],[28,23,34,21,"response"],[28,31,34,29],[28,32,34,30,"text"],[28,36,34,34],[28,37,34,35],[28,38,34,36],[29,4,35,2],[29,8,35,6],[29,9,35,7,"contentType"],[29,20,35,18],[29,21,35,19,"includes"],[29,29,35,27],[29,30,35,28],[29,48,35,46],[29,49,35,47],[29,51,35,49],[30,6,36,4],[31,6,37,4],[31,10,37,8,"text"],[31,14,37,12],[31,15,37,13,"trim"],[31,19,37,17],[31,20,37,18],[31,21,37,19],[31,22,37,20,"startsWith"],[31,32,37,30],[31,33,37,31],[31,44,37,42],[31,45,37,43],[31,49,37,47,"text"],[31,53,37,51],[31,54,37,52,"trim"],[31,58,37,56],[31,59,37,57],[31,60,37,58],[31,61,37,59,"startsWith"],[31,71,37,69],[31,72,37,70],[31,79,37,77],[31,80,37,78],[31,82,37,80],[32,8,38,6],[32,14,38,12],[32,18,38,16,"Error"],[32,23,38,21],[32,24,39,8],[32,103,40,6],[32,104,40,7],[33,6,41,4],[34,6,42,4],[35,6,43,4],[35,10,43,8],[36,8,44,6],[36,15,44,13,"JSON"],[36,19,44,17],[36,20,44,18,"parse"],[36,25,44,23],[36,26,44,24,"text"],[36,30,44,28],[36,31,44,29],[37,6,45,4],[37,7,45,5],[37,8,45,6],[37,14,45,12],[38,8,46,6],[38,14,46,12],[38,18,46,16,"Error"],[38,23,46,21],[38,24,46,22],[38,54,46,52],[38,55,46,53],[39,6,47,4],[40,4,48,2],[41,4,49,2],[41,8,49,6],[42,6,50,4],[42,13,50,11,"JSON"],[42,17,50,15],[42,18,50,16,"parse"],[42,23,50,21],[42,24,50,22,"text"],[42,28,50,26],[42,29,50,27],[43,4,51,2],[43,5,51,3],[43,6,51,4],[43,12,51,10],[44,6,52,4],[44,12,52,10],[44,16,52,14,"Error"],[44,21,52,19],[44,22,52,20],[44,83,52,81],[44,84,52,82],[45,4,53,2],[46,2,54,0],[48,2,56,0],[49,2,57,7],[49,11,57,16,"AuthProvider"],[49,23,57,28,"AuthProvider"],[49,24,57,29],[50,4,57,31,"children"],[51,2,57,65],[51,3,57,66],[51,5,57,68],[52,4,58,2],[52,10,58,8],[52,11,58,9,"user"],[52,15,58,13],[52,17,58,15,"setUser"],[52,24,58,22],[52,25,58,23],[52,28,58,26],[52,32,58,26,"useState"],[52,38,58,34],[52,39,58,34,"useState"],[52,47,58,34],[52,49,58,48],[52,53,58,52],[52,54,58,53],[53,4,59,2],[53,10,59,8],[53,11,59,9,"token"],[53,16,59,14],[53,18,59,16,"setToken"],[53,26,59,24],[53,27,59,25],[53,30,59,28],[53,34,59,28,"useState"],[53,40,59,36],[53,41,59,36,"useState"],[53,49,59,36],[53,51,59,52],[53,55,59,56],[53,56,59,57],[54,4,60,2],[54,10,60,8],[54,11,60,9,"loading"],[54,18,60,16],[54,20,60,18,"setLoading"],[54,30,60,28],[54,31,60,29],[54,34,60,32],[54,38,60,32,"useState"],[54,44,60,40],[54,45,60,40,"useState"],[54,53,60,40],[54,55,60,41],[54,59,60,45],[54,60,60,46],[55,4,62,2],[55,10,62,8,"logout"],[55,16,62,14],[55,19,62,17],[55,23,62,17,"useCallback"],[55,29,62,28],[55,30,62,28,"useCallback"],[55,41,62,28],[55,43,62,29],[55,55,62,41],[56,6,63,4],[56,10,63,8],[57,8,64,6],[58,8,65,6],[58,14,65,12,"AsyncStorage"],[58,26,65,24],[58,27,65,24,"default"],[58,34,65,24],[58,35,65,25,"removeItem"],[58,45,65,35],[58,46,65,36],[58,58,65,48],[58,59,65,49],[59,8,66,6],[59,14,66,12,"AsyncStorage"],[59,26,66,24],[59,27,66,24,"default"],[59,34,66,24],[59,35,66,25,"removeItem"],[59,45,66,35],[59,46,66,36],[59,57,66,47],[59,58,66,48],[60,6,67,4],[60,7,67,5],[60,8,67,6],[60,15,67,13,"error"],[60,20,67,18],[60,22,67,20],[61,8,68,6,"console"],[61,15,68,13],[61,16,68,14,"error"],[61,21,68,19],[61,22,68,20],[61,47,68,45],[61,49,68,47,"error"],[61,54,68,52],[61,55,68,53],[62,6,69,4],[64,6,71,4],[65,6,72,4,"setToken"],[65,14,72,12],[65,15,72,13],[65,19,72,17],[65,20,72,18],[66,6,73,4,"setUser"],[66,13,73,11],[66,14,73,12],[66,18,73,16],[66,19,73,17],[67,6,75,4,"console"],[67,13,75,11],[67,14,75,12,"log"],[67,17,75,15],[67,18,75,16],[67,55,75,53],[67,56,75,54],[68,4,76,2],[68,5,76,3],[68,7,76,5],[68,9,76,7],[68,10,76,8],[69,4,78,2],[69,10,78,8,"verifyToken"],[69,21,78,19],[69,24,78,22],[69,28,78,22,"useCallback"],[69,34,78,33],[69,35,78,33,"useCallback"],[69,46,78,33],[69,48,78,34],[69,54,78,41,"authToken"],[69,63,78,58],[69,67,78,63],[70,6,79,4],[70,10,79,8],[71,8,80,6],[71,14,80,12,"base"],[71,18,80,16],[71,21,80,19,"ensureBaseUrl"],[71,34,80,32],[71,35,80,33],[71,36,80,34],[72,8,81,6],[73,8,82,6],[73,12,82,10,"response"],[73,20,82,18],[73,23,82,21],[73,29,82,27,"fetch"],[73,34,82,32],[73,35,82,33],[73,38,82,36,"base"],[73,42,82,40],[73,56,82,54],[73,58,82,56],[74,10,83,8,"headers"],[74,17,83,15],[74,19,83,17],[75,12,84,10,"Authorization"],[75,25,84,23],[75,27,84,25],[75,37,84,35,"authToken"],[75,46,84,44],[75,48,84,46],[76,12,85,10],[76,26,85,24],[76,28,85,26],[77,10,86,8],[78,8,87,6],[78,9,87,7],[78,10,87,8],[80,8,89,6],[81,8,90,6],[81,12,90,10],[81,13,90,11,"response"],[81,21,90,19],[81,22,90,20,"ok"],[81,24,90,22],[81,28,90,26,"response"],[81,36,90,34],[81,37,90,35,"status"],[81,43,90,41],[81,48,90,46],[81,51,90,49],[81,53,90,51],[82,10,91,8,"response"],[82,18,91,16],[82,21,91,19],[82,27,91,25,"fetch"],[82,32,91,30],[82,33,91,31],[82,36,91,34,"base"],[82,40,91,38],[82,50,91,48],[82,52,91,50],[83,12,92,10,"headers"],[83,19,92,17],[83,21,92,19],[84,14,93,12,"Authorization"],[84,27,93,25],[84,29,93,27],[84,39,93,37,"authToken"],[84,48,93,46],[84,50,93,48],[85,14,94,12],[85,28,94,26],[85,30,94,28],[86,12,95,10],[87,10,96,8],[87,11,96,9],[87,12,96,10],[88,8,97,6],[89,8,99,6],[89,12,99,10],[89,13,99,11,"response"],[89,21,99,19],[89,22,99,20,"ok"],[89,24,99,22],[89,26,99,24],[90,10,100,8],[90,16,100,14],[90,20,100,18,"Error"],[90,25,100,23],[90,26,100,24],[90,41,100,39],[90,42,100,40],[91,8,101,6],[92,8,102,6],[92,14,102,12,"userData"],[92,22,102,20],[92,25,102,23],[92,31,102,29,"safeParseJSON"],[92,44,102,42],[92,45,102,43,"response"],[92,53,102,51],[92,54,102,52],[93,8,103,6,"setUser"],[93,15,103,13],[93,16,103,14,"userData"],[93,24,103,22],[93,25,103,23],[94,6,104,4],[94,7,104,5],[94,8,104,6],[94,15,104,13,"error"],[94,20,104,18],[94,22,104,20],[95,8,105,6,"console"],[95,15,105,13],[95,16,105,14,"error"],[95,21,105,19],[95,22,105,20],[95,50,105,48],[95,52,105,50,"error"],[95,57,105,55],[95,58,105,56],[96,8,106,6],[96,14,106,12,"logout"],[96,20,106,18],[96,21,106,19],[96,22,106,20],[97,6,107,4],[98,4,108,2],[98,5,108,3],[98,7,108,5],[98,8,108,6,"logout"],[98,14,108,12],[98,15,108,13],[98,16,108,14],[99,4,110,2],[99,10,110,8,"loadStoredAuth"],[99,24,110,22],[99,27,110,25],[99,31,110,25,"useCallback"],[99,37,110,36],[99,38,110,36,"useCallback"],[99,49,110,36],[99,51,110,37],[99,63,110,49],[100,6,111,4],[100,10,111,8],[101,8,112,6],[101,14,112,12,"storedToken"],[101,25,112,23],[101,28,112,26],[101,34,112,32,"AsyncStorage"],[101,46,112,44],[101,47,112,44,"default"],[101,54,112,44],[101,55,112,45,"getItem"],[101,62,112,52],[101,63,112,53],[101,75,112,65],[101,76,112,66],[102,8,113,6],[102,14,113,12,"storedUser"],[102,24,113,22],[102,27,113,25],[102,33,113,31,"AsyncStorage"],[102,45,113,43],[102,46,113,43,"default"],[102,53,113,43],[102,54,113,44,"getItem"],[102,61,113,51],[102,62,113,52],[102,73,113,63],[102,74,113,64],[103,8,115,6],[103,12,115,10,"storedToken"],[103,23,115,21],[103,27,115,25,"storedUser"],[103,37,115,35],[103,39,115,37],[104,10,116,8,"setToken"],[104,18,116,16],[104,19,116,17,"storedToken"],[104,30,116,28],[104,31,116,29],[105,10,117,8,"setUser"],[105,17,117,15],[105,18,117,16,"JSON"],[105,22,117,20],[105,23,117,21,"parse"],[105,28,117,26],[105,29,117,27,"storedUser"],[105,39,117,37],[105,40,117,38],[105,41,117,39],[107,10,119,8],[108,10,120,8],[108,16,120,14,"verifyToken"],[108,27,120,25],[108,28,120,26,"storedToken"],[108,39,120,37],[108,40,120,38],[109,8,121,6],[110,6,122,4],[110,7,122,5],[110,8,122,6],[110,15,122,13,"error"],[110,20,122,18],[110,22,122,20],[111,8,123,6,"console"],[111,15,123,13],[111,16,123,14,"error"],[111,21,123,19],[111,22,123,20],[111,50,123,48],[111,52,123,50,"error"],[111,57,123,55],[111,58,123,56],[112,8,124,6],[112,14,124,12,"logout"],[112,20,124,18],[112,21,124,19],[112,22,124,20],[113,6,125,4],[113,7,125,5],[113,16,125,14],[114,8,126,6,"setLoading"],[114,18,126,16],[114,19,126,17],[114,24,126,22],[114,25,126,23],[115,6,127,4],[116,4,128,2],[116,5,128,3],[116,7,128,5],[116,8,128,6,"verifyToken"],[116,19,128,17],[116,21,128,19,"logout"],[116,27,128,25],[116,28,128,26],[116,29,128,27],[118,4,130,2],[119,4,131,2],[119,8,131,2,"useEffect"],[119,14,131,11],[119,15,131,11,"useEffect"],[119,24,131,11],[119,26,131,12],[119,32,131,18],[120,6,132,4,"loadStoredAuth"],[120,20,132,18],[120,21,132,19],[120,22,132,20],[121,4,133,2],[121,5,133,3],[121,7,133,5],[121,8,133,6,"loadStoredAuth"],[121,22,133,20],[121,23,133,21],[121,24,133,22],[123,4,135,2],[125,4,137,2],[125,10,137,8,"login"],[125,15,137,13],[125,18,137,16],[125,24,137,16,"login"],[125,25,137,23,"email"],[125,30,137,36],[125,32,137,38,"password"],[125,40,137,54],[125,45,137,59],[126,6,138,4],[126,10,138,8],[127,8,139,6],[127,14,139,12,"base"],[127,18,139,16],[127,21,139,19,"ensureBaseUrl"],[127,34,139,32],[127,35,139,33],[127,36,139,34],[128,8,140,6],[129,8,141,6],[129,12,141,10,"response"],[129,20,141,18],[129,23,141,21],[129,29,141,27,"fetch"],[129,34,141,32],[129,35,141,33],[129,38,141,36,"base"],[129,42,141,40],[129,59,141,57],[129,61,141,59],[130,10,142,8,"method"],[130,16,142,14],[130,18,142,16],[130,24,142,22],[131,10,143,8,"headers"],[131,17,143,15],[131,19,143,17],[132,12,144,10],[132,26,144,24],[132,28,144,26],[133,10,145,8],[133,11,145,9],[134,10,146,8,"body"],[134,14,146,12],[134,16,146,14,"JSON"],[134,20,146,18],[134,21,146,19,"stringify"],[134,30,146,28],[134,31,146,29],[135,12,146,31,"username"],[135,20,146,39],[135,22,146,41,"email"],[135,27,146,46],[136,12,146,48,"password"],[137,10,146,57],[137,11,146,58],[138,8,147,6],[138,9,147,7],[138,10,147,8],[140,8,149,6],[141,8,150,6],[141,12,150,10],[141,13,150,11,"response"],[141,21,150,19],[141,22,150,20,"ok"],[141,24,150,22],[141,28,150,26,"response"],[141,36,150,34],[141,37,150,35,"status"],[141,43,150,41],[141,48,150,46],[141,51,150,49],[141,53,150,51],[142,10,151,8,"response"],[142,18,151,16],[142,21,151,19],[142,27,151,25,"fetch"],[142,32,151,30],[142,33,151,31],[142,36,151,34,"base"],[142,40,151,38],[142,53,151,51],[142,55,151,53],[143,12,152,10,"method"],[143,18,152,16],[143,20,152,18],[143,26,152,24],[144,12,153,10,"headers"],[144,19,153,17],[144,21,153,19],[145,14,154,12],[145,28,154,26],[145,30,154,28],[146,12,155,10],[146,13,155,11],[147,12,156,10,"body"],[147,16,156,14],[147,18,156,16,"JSON"],[147,22,156,20],[147,23,156,21,"stringify"],[147,32,156,30],[147,33,156,31],[148,14,156,33,"username"],[148,22,156,41],[148,24,156,43,"email"],[148,29,156,48],[149,14,156,50,"password"],[150,12,156,59],[150,13,156,60],[151,10,157,8],[151,11,157,9],[151,12,157,10],[152,8,158,6],[153,8,160,6],[153,12,160,10,"data"],[153,16,160,19],[154,8,161,6],[154,12,161,10],[155,10,162,8,"data"],[155,14,162,12],[155,17,162,15],[155,23,162,21,"safeParseJSON"],[155,36,162,34],[155,37,162,35,"response"],[155,45,162,43],[155,46,162,44],[156,8,163,6],[156,9,163,7],[156,10,163,8],[156,17,163,15,"parseErr"],[156,25,163,28],[156,27,163,30],[157,10,164,8],[157,16,164,14],[157,20,164,18,"Error"],[157,25,164,23],[157,26,164,24,"parseErr"],[157,34,164,32],[157,35,164,33,"message"],[157,42,164,40],[157,46,164,44],[157,73,164,71],[157,74,164,72],[158,8,165,6],[159,8,167,6],[159,12,167,10],[159,13,167,11,"response"],[159,21,167,19],[159,22,167,20,"ok"],[159,24,167,22],[159,26,167,24],[160,10,168,8],[161,10,169,8],[161,14,169,12,"errorMessage"],[161,26,169,24],[161,29,169,27],[161,54,169,52],[162,10,170,8],[162,14,170,12,"data"],[162,18,170,16],[162,20,170,18,"detail"],[162,26,170,24],[162,28,170,26],[163,12,171,10,"errorMessage"],[163,24,171,22],[163,27,171,25],[163,34,171,32,"data"],[163,38,171,36],[163,39,171,37,"detail"],[163,45,171,43],[163,50,171,48],[163,58,171,56],[163,61,171,59,"data"],[163,65,171,63],[163,66,171,64,"detail"],[163,72,171,70],[163,75,171,73],[163,99,171,97],[164,10,172,8],[164,11,172,9],[164,17,172,15],[164,21,172,19,"data"],[164,25,172,23],[164,27,172,25,"message"],[164,34,172,32],[164,36,172,34],[165,12,173,10,"errorMessage"],[165,24,173,22],[165,27,173,25],[165,34,173,32,"data"],[165,38,173,36],[165,39,173,37,"message"],[165,46,173,44],[165,51,173,49],[165,59,173,57],[165,62,173,60,"data"],[165,66,173,64],[165,67,173,65,"message"],[165,74,173,72],[165,77,173,75],[165,97,173,95],[166,10,174,8],[167,10,175,8],[167,16,175,14],[167,20,175,18,"Error"],[167,25,175,23],[167,26,175,24,"errorMessage"],[167,38,175,36],[167,39,175,37],[168,8,176,6],[170,8,178,6],[171,8,179,6],[171,14,179,12,"synthesizedUser"],[171,29,179,33],[171,32,179,36],[172,10,180,8,"id"],[172,12,180,10],[172,14,180,12,"data"],[172,18,180,16],[172,19,180,17,"user"],[172,23,180,21],[172,25,180,23,"id"],[172,27,180,25],[172,31,180,29,"email"],[172,36,180,34],[173,10,181,8,"email"],[173,15,181,13],[174,10,182,8,"name"],[174,14,182,12],[174,16,182,14,"data"],[174,20,182,18],[174,21,182,19,"user"],[174,25,182,23],[174,27,182,25,"name"],[174,31,182,29],[174,35,182,33,"email"],[174,40,182,38],[174,41,182,39,"split"],[174,46,182,44],[174,47,182,45],[174,50,182,48],[174,51,182,49],[174,52,182,50],[174,53,182,51],[174,54,182,52],[175,10,183,8,"has_gemini_key"],[175,24,183,22],[175,26,183,24,"data"],[175,30,183,28],[175,31,183,29,"user"],[175,35,183,33],[175,37,183,35,"has_gemini_key"],[175,51,183,49],[175,55,183,53],[176,8,184,6],[176,9,184,7],[177,8,186,6],[177,14,186,12,"AsyncStorage"],[177,26,186,24],[177,27,186,24,"default"],[177,34,186,24],[177,35,186,25,"setItem"],[177,42,186,32],[177,43,186,33],[177,55,186,45],[177,57,186,47,"data"],[177,61,186,51],[177,62,186,52,"access_token"],[177,74,186,64],[177,75,186,65],[178,8,187,6],[178,14,187,12,"AsyncStorage"],[178,26,187,24],[178,27,187,24,"default"],[178,34,187,24],[178,35,187,25,"setItem"],[178,42,187,32],[178,43,187,33],[178,54,187,44],[178,56,187,46,"JSON"],[178,60,187,50],[178,61,187,51,"stringify"],[178,70,187,60],[178,71,187,61,"synthesizedUser"],[178,86,187,76],[178,87,187,77],[178,88,187,78],[179,8,189,6,"setToken"],[179,16,189,14],[179,17,189,15,"data"],[179,21,189,19],[179,22,189,20,"access_token"],[179,34,189,32],[179,35,189,33],[180,8,190,6,"setUser"],[180,15,190,13],[180,16,190,14,"synthesizedUser"],[180,31,190,29],[180,32,190,30],[181,6,191,4],[181,7,191,5],[181,8,191,6],[181,15,191,13,"error"],[181,20,191,23],[181,22,191,25],[182,8,192,6,"console"],[182,15,192,13],[182,16,192,14,"error"],[182,21,192,19],[182,22,192,20],[182,39,192,37],[182,41,192,39,"error"],[182,46,192,44],[182,47,192,45],[183,8,193,6],[184,8,194,6],[184,12,194,10,"errorMessage"],[184,24,194,22],[184,27,194,25],[184,46,194,44],[185,8,195,6],[185,12,195,10,"error"],[185,17,195,15],[185,19,195,17,"message"],[185,26,195,24],[185,28,195,26],[186,10,196,8,"errorMessage"],[186,22,196,20],[186,25,196,23,"error"],[186,30,196,28],[186,31,196,29,"message"],[186,38,196,36],[187,8,197,6],[187,9,197,7],[187,15,197,13],[187,19,197,17],[187,26,197,24,"error"],[187,31,197,29],[187,36,197,34],[187,44,197,42],[187,46,197,44],[188,10,198,8,"errorMessage"],[188,22,198,20],[188,25,198,23,"error"],[188,30,198,28],[189,8,199,6],[189,9,199,7],[189,15,199,13],[189,19,199,17,"error"],[189,24,199,22],[189,26,199,24,"name"],[189,30,199,28],[189,35,199,33],[189,46,199,44],[189,50,199,48,"error"],[189,55,199,53],[189,57,199,55,"message"],[189,64,199,62],[189,66,199,64,"includes"],[189,74,199,72],[189,75,199,73],[189,82,199,80],[189,83,199,81],[189,85,199,83],[190,10,200,8,"errorMessage"],[190,22,200,20],[190,25,200,23],[190,85,200,83],[191,8,201,6],[192,8,202,6],[192,14,202,12],[192,18,202,16,"Error"],[192,23,202,21],[192,24,202,22,"errorMessage"],[192,36,202,34],[192,37,202,35],[193,6,203,4],[194,4,204,2],[194,5,204,3],[195,4,206,2],[195,10,206,8,"register"],[195,18,206,16],[195,21,206,19],[195,27,206,19,"register"],[195,28,206,26,"email"],[195,33,206,39],[195,35,206,41,"password"],[195,43,206,57],[195,45,206,59,"name"],[195,49,206,71],[195,54,206,76],[196,6,207,4],[196,10,207,8],[197,8,208,6],[197,14,208,12,"base"],[197,18,208,16],[197,21,208,19,"ensureBaseUrl"],[197,34,208,32],[197,35,208,33],[197,36,208,34],[198,8,209,6],[199,8,210,6],[199,12,210,10,"response"],[199,20,210,18],[199,23,210,21],[199,29,210,27,"fetch"],[199,34,210,32],[199,35,210,33],[199,38,210,36,"base"],[199,42,210,40],[199,62,210,60],[199,64,210,62],[200,10,211,8,"method"],[200,16,211,14],[200,18,211,16],[200,24,211,22],[201,10,212,8,"headers"],[201,17,212,15],[201,19,212,17],[202,12,213,10],[202,26,213,24],[202,28,213,26],[203,10,214,8],[203,11,214,9],[204,10,215,8,"body"],[204,14,215,12],[204,16,215,14,"JSON"],[204,20,215,18],[204,21,215,19,"stringify"],[204,30,215,28],[204,31,215,29],[205,12,215,31,"username"],[205,20,215,39],[205,22,215,41,"name"],[205,26,215,45],[205,27,215,46,"trim"],[205,31,215,50],[205,32,215,51],[205,33,215,52],[205,37,215,56,"email"],[205,42,215,61],[205,43,215,62,"split"],[205,48,215,67],[205,49,215,68],[205,52,215,71],[205,53,215,72],[205,54,215,73],[205,55,215,74],[205,56,215,75],[206,12,215,77,"email"],[206,17,215,82],[207,12,215,84,"password"],[208,10,215,93],[208,11,215,94],[209,8,216,6],[209,9,216,7],[209,10,216,8],[211,8,218,6],[212,8,219,6],[212,12,219,10],[212,13,219,11,"response"],[212,21,219,19],[212,22,219,20,"ok"],[212,24,219,22],[212,28,219,26,"response"],[212,36,219,34],[212,37,219,35,"status"],[212,43,219,41],[212,48,219,46],[212,51,219,49],[212,53,219,51],[213,10,220,8,"response"],[213,18,220,16],[213,21,220,19],[213,27,220,25,"fetch"],[213,32,220,30],[213,33,220,31],[213,36,220,34,"base"],[213,40,220,38],[213,56,220,54],[213,58,220,56],[214,12,221,10,"method"],[214,18,221,16],[214,20,221,18],[214,26,221,24],[215,12,222,10,"headers"],[215,19,222,17],[215,21,222,19],[216,14,223,12],[216,28,223,26],[216,30,223,28],[217,12,224,10],[217,13,224,11],[218,12,225,10,"body"],[218,16,225,14],[218,18,225,16,"JSON"],[218,22,225,20],[218,23,225,21,"stringify"],[218,32,225,30],[218,33,225,31],[219,14,225,33,"username"],[219,22,225,41],[219,24,225,43,"name"],[219,28,225,47],[219,29,225,48,"trim"],[219,33,225,52],[219,34,225,53],[219,35,225,54],[219,39,225,58,"email"],[219,44,225,63],[219,45,225,64,"split"],[219,50,225,69],[219,51,225,70],[219,54,225,73],[219,55,225,74],[219,56,225,75],[219,57,225,76],[219,58,225,77],[220,14,225,79,"email"],[220,19,225,84],[221,14,225,86,"password"],[222,12,225,95],[222,13,225,96],[223,10,226,8],[223,11,226,9],[223,12,226,10],[224,8,227,6],[225,8,229,6],[225,12,229,10,"data"],[225,16,229,19],[226,8,230,6],[226,12,230,10],[227,10,231,8,"data"],[227,14,231,12],[227,17,231,15],[227,23,231,21,"safeParseJSON"],[227,36,231,34],[227,37,231,35,"response"],[227,45,231,43],[227,46,231,44],[228,8,232,6],[228,9,232,7],[228,10,232,8],[228,17,232,15,"parseErr"],[228,25,232,28],[228,27,232,30],[229,10,233,8],[229,16,233,14],[229,20,233,18,"Error"],[229,25,233,23],[229,26,233,24,"parseErr"],[229,34,233,32],[229,35,233,33,"message"],[229,42,233,40],[229,46,233,44],[229,73,233,71],[229,74,233,72],[230,8,234,6],[231,8,236,6],[231,12,236,10],[231,13,236,11,"response"],[231,21,236,19],[231,22,236,20,"ok"],[231,24,236,22],[231,26,236,24],[232,10,237,8],[233,10,238,8],[233,14,238,12,"errorMessage"],[233,26,238,24],[233,29,238,27],[233,51,238,49],[234,10,239,8],[234,14,239,12,"data"],[234,18,239,16],[234,20,239,18,"detail"],[234,26,239,24],[234,28,239,26],[235,12,240,10,"errorMessage"],[235,24,240,22],[235,27,240,25],[235,34,240,32,"data"],[235,38,240,36],[235,39,240,37,"detail"],[235,45,240,43],[235,50,240,48],[235,58,240,56],[235,61,240,59,"data"],[235,65,240,63],[235,66,240,64,"detail"],[235,72,240,70],[235,75,240,73],[235,96,240,94],[236,10,241,8],[236,11,241,9],[236,17,241,15],[236,21,241,19,"data"],[236,25,241,23],[236,27,241,25,"message"],[236,34,241,32],[236,36,241,34],[237,12,242,10,"errorMessage"],[237,24,242,22],[237,27,242,25],[237,34,242,32,"data"],[237,38,242,36],[237,39,242,37,"message"],[237,46,242,44],[237,51,242,49],[237,59,242,57],[237,62,242,60,"data"],[237,66,242,64],[237,67,242,65,"message"],[237,74,242,72],[237,77,242,75],[237,97,242,95],[238,10,243,8],[239,10,244,8],[239,16,244,14],[239,20,244,18,"Error"],[239,25,244,23],[239,26,244,24,"errorMessage"],[239,38,244,36],[239,39,244,37],[240,8,245,6],[241,8,247,6],[241,14,247,12,"synthesizedUser"],[241,29,247,33],[241,32,247,36],[242,10,248,8,"id"],[242,12,248,10],[242,14,248,12,"data"],[242,18,248,16],[242,19,248,17,"user"],[242,23,248,21],[242,25,248,23,"id"],[242,27,248,25],[242,31,248,29,"email"],[242,36,248,34],[243,10,249,8,"email"],[243,15,249,13],[244,10,250,8,"name"],[244,14,250,12],[244,16,250,14,"name"],[244,20,250,18],[244,24,250,22,"email"],[244,29,250,27],[244,30,250,28,"split"],[244,35,250,33],[244,36,250,34],[244,39,250,37],[244,40,250,38],[244,41,250,39],[244,42,250,40],[244,43,250,41],[245,10,251,8,"has_gemini_key"],[245,24,251,22],[245,26,251,24],[246,8,252,6],[246,9,252,7],[247,8,254,6],[247,14,254,12,"AsyncStorage"],[247,26,254,24],[247,27,254,24,"default"],[247,34,254,24],[247,35,254,25,"setItem"],[247,42,254,32],[247,43,254,33],[247,55,254,45],[247,57,254,47,"data"],[247,61,254,51],[247,62,254,52,"access_token"],[247,74,254,64],[247,75,254,65],[248,8,255,6],[248,14,255,12,"AsyncStorage"],[248,26,255,24],[248,27,255,24,"default"],[248,34,255,24],[248,35,255,25,"setItem"],[248,42,255,32],[248,43,255,33],[248,54,255,44],[248,56,255,46,"JSON"],[248,60,255,50],[248,61,255,51,"stringify"],[248,70,255,60],[248,71,255,61,"synthesizedUser"],[248,86,255,76],[248,87,255,77],[248,88,255,78],[249,8,257,6,"setToken"],[249,16,257,14],[249,17,257,15,"data"],[249,21,257,19],[249,22,257,20,"access_token"],[249,34,257,32],[249,35,257,33],[250,8,258,6,"setUser"],[250,15,258,13],[250,16,258,14,"synthesizedUser"],[250,31,258,29],[250,32,258,30],[251,6,259,4],[251,7,259,5],[251,8,259,6],[251,15,259,13,"error"],[251,20,259,23],[251,22,259,25],[252,8,260,6,"console"],[252,15,260,13],[252,16,260,14,"error"],[252,21,260,19],[252,22,260,20],[252,42,260,40],[252,44,260,42,"error"],[252,49,260,47],[252,50,260,48],[253,8,261,6],[254,8,262,6],[254,12,262,10,"errorMessage"],[254,24,262,22],[254,27,262,25],[254,46,262,44],[255,8,263,6],[255,12,263,10,"error"],[255,17,263,15],[255,19,263,17,"message"],[255,26,263,24],[255,28,263,26],[256,10,264,8,"errorMessage"],[256,22,264,20],[256,25,264,23,"error"],[256,30,264,28],[256,31,264,29,"message"],[256,38,264,36],[257,8,265,6],[257,9,265,7],[257,15,265,13],[257,19,265,17],[257,26,265,24,"error"],[257,31,265,29],[257,36,265,34],[257,44,265,42],[257,46,265,44],[258,10,266,8,"errorMessage"],[258,22,266,20],[258,25,266,23,"error"],[258,30,266,28],[259,8,267,6],[259,9,267,7],[259,15,267,13],[259,19,267,17,"error"],[259,24,267,22],[259,26,267,24,"name"],[259,30,267,28],[259,35,267,33],[259,46,267,44],[259,50,267,48,"error"],[259,55,267,53],[259,57,267,55,"message"],[259,64,267,62],[259,66,267,64,"includes"],[259,74,267,72],[259,75,267,73],[259,82,267,80],[259,83,267,81],[259,85,267,83],[260,10,268,8,"errorMessage"],[260,22,268,20],[260,25,268,23],[260,85,268,83],[261,8,269,6],[262,8,270,6],[262,14,270,12],[262,18,270,16,"Error"],[262,23,270,21],[262,24,270,22,"errorMessage"],[262,36,270,34],[262,37,270,35],[263,6,271,4],[264,4,272,2],[264,5,272,3],[266,4,274,2],[268,4,276,2],[268,10,276,8,"updateUser"],[268,20,276,18],[268,23,276,22,"userData"],[268,31,276,45],[268,35,276,50],[269,6,277,4],[269,10,277,8,"user"],[269,14,277,12],[269,16,277,14],[270,8,278,6],[270,14,278,12,"updatedUser"],[270,25,278,23],[270,28,278,26],[271,10,278,28],[271,13,278,31,"user"],[271,17,278,35],[272,10,278,37],[272,13,278,40,"userData"],[273,8,278,49],[273,9,278,50],[274,8,279,6,"setUser"],[274,15,279,13],[274,16,279,14,"updatedUser"],[274,27,279,25],[274,28,279,26],[275,8,280,6,"AsyncStorage"],[275,20,280,18],[275,21,280,18,"default"],[275,28,280,18],[275,29,280,19,"setItem"],[275,36,280,26],[275,37,280,27],[275,48,280,38],[275,50,280,40,"JSON"],[275,54,280,44],[275,55,280,45,"stringify"],[275,64,280,54],[275,65,280,55,"updatedUser"],[275,76,280,66],[275,77,280,67],[275,78,280,68],[276,6,281,4],[277,4,282,2],[277,5,282,3],[278,4,284,2],[278,10,284,8,"value"],[278,15,284,30],[278,18,284,33],[279,6,285,4,"user"],[279,10,285,8],[280,6,286,4,"token"],[280,11,286,9],[281,6,287,4,"loading"],[281,13,287,11],[282,6,288,4,"login"],[282,11,288,9],[283,6,289,4,"register"],[283,14,289,12],[284,6,290,4,"logout"],[284,12,290,10],[285,6,291,4,"updateUser"],[286,4,292,2],[286,5,292,3],[287,4,294,2],[287,24,295,4],[287,28,295,4,"_reactJsxDevRuntime"],[287,47,295,4],[287,48,295,4,"jsxDEV"],[287,54,295,4],[287,56,295,5,"AuthContext"],[287,67,295,16],[287,68,295,17,"Provider"],[287,76,295,25],[288,6,295,26,"value"],[288,11,295,31],[288,13,295,33,"value"],[288,18,295,39],[289,6,295,39,"children"],[289,14,295,39],[289,16,296,7,"children"],[290,4,296,15],[291,6,296,15,"fileName"],[291,14,296,15],[291,16,296,15,"_jsxFileName"],[291,28,296,15],[292,6,296,15,"lineNumber"],[292,16,296,15],[293,6,296,15,"columnNumber"],[293,18,296,15],[294,4,296,15],[294,11,297,26],[294,12,297,27],[295,2,299,0],[297,2,301,0],[298,2,302,7],[298,11,302,16,"useAuth"],[298,18,302,23,"useAuth"],[298,19,302,23],[298,21,302,26],[299,4,303,2],[299,10,303,8,"context"],[299,17,303,15],[299,20,303,18],[299,24,303,18,"useContext"],[299,30,303,28],[299,31,303,28,"useContext"],[299,41,303,28],[299,43,303,29,"AuthContext"],[299,54,303,40],[299,55,303,41],[300,4,304,2],[300,8,304,6,"context"],[300,15,304,13],[300,20,304,18,"undefined"],[300,29,304,27],[300,31,304,29],[301,6,305,4],[301,12,305,10],[301,16,305,14,"Error"],[301,21,305,19],[301,22,305,20],[301,67,305,65],[301,68,305,66],[302,4,306,2],[303,4,307,2],[303,11,307,9,"context"],[303,18,307,16],[304,2,308,0],[305,0,308,1],[305,3]],"functionMap":{"names":["<global>","ensureBaseUrl","safeParseJSON","AuthProvider","logout","verifyToken","loadStoredAuth","useEffect$argument_0","login","register","updateUser","useAuth"],"mappings":"AAA;AC2B;CDE;AEE;CFsB;OGG;6BCK;GDc;kCEE;GF8B;qCGE;GHkB;YIG;GJE;gBKI;GLmE;mBME;GNkE;qBOI;GPM;CHiB;OWG"},"hasCjsExports":false},"type":"js/module"}]}