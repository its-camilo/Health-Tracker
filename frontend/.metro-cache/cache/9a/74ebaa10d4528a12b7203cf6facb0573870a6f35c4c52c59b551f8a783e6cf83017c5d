{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":277},"end":{"line":2,"column":26,"index":303}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./enums","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":304},"end":{"line":3,"column":66,"index":370}}],"key":"/61ZvVYnH75HFkA56ZMl9uzhQPQ=","exportNames":["*"]}},{"name":"./TextInputAffix","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":371},"end":{"line":4,"column":66,"index":437}}],"key":"k8LDhgkV45r9EpNijILTvEX/b4o=","exportNames":["*"]}},{"name":"./TextInputIcon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":438},"end":{"line":5,"column":63,"index":501}}],"key":"xvpjH5nj44XGWmGakD7IYVtk1aA=","exportNames":["*"]}},{"name":"../helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":502},"end":{"line":6,"column":42,"index":544}}],"key":"sVcBW6uknPZeHJnN5Ce/W2g6wWI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.getAdornmentConfig = getAdornmentConfig;\n  exports.getAdornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput;\n  var _react = _interopRequireDefault(require(_dependencyMap[1], \"react\"));\n  var _enums = require(_dependencyMap[2], \"./enums\");\n  var _TextInputAffix = _interopRequireWildcard(require(_dependencyMap[3], \"./TextInputAffix\"));\n  var _TextInputIcon = _interopRequireWildcard(require(_dependencyMap[4], \"./TextInputIcon\"));\n  var _helpers = require(_dependencyMap[5], \"../helpers\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  function _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function (n) {\n      for (var e = 1; e < arguments.length; e++) {\n        var t = arguments[e];\n        for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n      }\n      return n;\n    }, _extends.apply(null, arguments);\n  }\n  function getAdornmentConfig({\n    left,\n    right\n  }) {\n    let adornmentConfig = [];\n    if (left || right) {\n      [{\n        side: _enums.AdornmentSide.Left,\n        adornment: left\n      }, {\n        side: _enums.AdornmentSide.Right,\n        adornment: right\n      }].forEach(({\n        side,\n        adornment\n      }) => {\n        if (adornment && /*#__PURE__*/_react.default.isValidElement(adornment)) {\n          let type;\n          if (adornment.type === _TextInputAffix.default) {\n            type = _enums.AdornmentType.Affix;\n          } else if (adornment.type === _TextInputIcon.default) {\n            type = _enums.AdornmentType.Icon;\n          }\n          adornmentConfig.push({\n            side,\n            type\n          });\n        }\n      });\n    }\n    return adornmentConfig;\n  }\n  function getAdornmentStyleAdjustmentForNativeInput({\n    adornmentConfig,\n    leftAffixWidth,\n    rightAffixWidth,\n    paddingHorizontal,\n    inputOffset = 0,\n    mode,\n    isV3\n  }) {\n    const {\n      OUTLINED_INPUT_OFFSET,\n      ADORNMENT_OFFSET\n    } = (0, _helpers.getConstants)(isV3);\n    if (adornmentConfig.length) {\n      const adornmentStyleAdjustmentForNativeInput = adornmentConfig.map(({\n        type,\n        side\n      }) => {\n        const isLeftSide = side === _enums.AdornmentSide.Left;\n        const inputModeAdornemntOffset = mode === _enums.InputMode.Outlined ? ADORNMENT_OFFSET + OUTLINED_INPUT_OFFSET : ADORNMENT_OFFSET;\n        const paddingKey = `padding${captalize(side)}`;\n        const affixWidth = isLeftSide ? leftAffixWidth : rightAffixWidth;\n        const padding = typeof paddingHorizontal === 'number' ? paddingHorizontal : inputModeAdornemntOffset;\n        const offset = affixWidth + padding;\n        const isAffix = type === _enums.AdornmentType.Affix;\n        const marginKey = `margin${captalize(side)}`;\n        return {\n          [marginKey]: isAffix ? 0 : offset,\n          [paddingKey]: isAffix ? offset : inputOffset\n        };\n      });\n      const allStyleAdjustmentsMerged = adornmentStyleAdjustmentForNativeInput.reduce((mergedStyles, currentStyle) => {\n        return Object.assign({}, mergedStyles, currentStyle);\n      }, {});\n      return allStyleAdjustmentsMerged;\n    } else {\n      return [{}];\n    }\n  }\n  const captalize = text => text.charAt(0).toUpperCase() + text.slice(1);\n  const TextInputAdornment = ({\n    adornmentConfig,\n    left,\n    right,\n    onAffixChange,\n    textStyle,\n    visible,\n    topPosition,\n    isTextInputFocused,\n    forceFocus,\n    paddingHorizontal,\n    maxFontSizeMultiplier,\n    theme,\n    disabled\n  }) => {\n    if (adornmentConfig.length) {\n      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, adornmentConfig.map(({\n        type,\n        side\n      }) => {\n        let inputAdornmentComponent;\n        if (side === _enums.AdornmentSide.Left) {\n          inputAdornmentComponent = left;\n        } else if (side === _enums.AdornmentSide.Right) {\n          inputAdornmentComponent = right;\n        }\n        const commonProps = {\n          side: side,\n          testID: `${side}-${type}-adornment`,\n          isTextInputFocused,\n          paddingHorizontal,\n          disabled\n        };\n        if (type === _enums.AdornmentType.Icon) {\n          return /*#__PURE__*/_react.default.createElement(_TextInputIcon.IconAdornment, _extends({}, commonProps, {\n            theme: theme,\n            key: side,\n            icon: inputAdornmentComponent,\n            topPosition: topPosition[_enums.AdornmentType.Icon],\n            forceFocus: forceFocus\n          }));\n        } else if (type === _enums.AdornmentType.Affix) {\n          return /*#__PURE__*/_react.default.createElement(_TextInputAffix.AffixAdornment, _extends({}, commonProps, {\n            key: side,\n            topPosition: topPosition[_enums.AdornmentType.Affix][side],\n            affix: inputAdornmentComponent,\n            textStyle: textStyle,\n            onLayout: onAffixChange[side],\n            visible: visible,\n            maxFontSizeMultiplier: maxFontSizeMultiplier\n          }));\n        } else {\n          return null;\n        }\n      }));\n    } else {\n      return null;\n    }\n  };\n  var _default = exports.default = TextInputAdornment;\n});","lineCount":156,"map":[[9,2,2,0],[9,6,2,0,"_react"],[9,12,2,0],[9,15,2,0,"_interopRequireDefault"],[9,37,2,0],[9,38,2,0,"require"],[9,45,2,0],[9,46,2,0,"_dependencyMap"],[9,60,2,0],[10,2,3,0],[10,6,3,0,"_enums"],[10,12,3,0],[10,15,3,0,"require"],[10,22,3,0],[10,23,3,0,"_dependencyMap"],[10,37,3,0],[11,2,4,0],[11,6,4,0,"_TextInputAffix"],[11,21,4,0],[11,24,4,0,"_interopRequireWildcard"],[11,47,4,0],[11,48,4,0,"require"],[11,55,4,0],[11,56,4,0,"_dependencyMap"],[11,70,4,0],[12,2,5,0],[12,6,5,0,"_TextInputIcon"],[12,20,5,0],[12,23,5,0,"_interopRequireWildcard"],[12,46,5,0],[12,47,5,0,"require"],[12,54,5,0],[12,55,5,0,"_dependencyMap"],[12,69,5,0],[13,2,6,0],[13,6,6,0,"_helpers"],[13,14,6,0],[13,17,6,0,"require"],[13,24,6,0],[13,25,6,0,"_dependencyMap"],[13,39,6,0],[14,2,6,42],[14,11,6,42,"_interopRequireWildcard"],[14,35,6,42,"e"],[14,36,6,42],[14,38,6,42,"t"],[14,39,6,42],[14,68,6,42,"WeakMap"],[14,75,6,42],[14,81,6,42,"r"],[14,82,6,42],[14,89,6,42,"WeakMap"],[14,96,6,42],[14,100,6,42,"n"],[14,101,6,42],[14,108,6,42,"WeakMap"],[14,115,6,42],[14,127,6,42,"_interopRequireWildcard"],[14,150,6,42],[14,162,6,42,"_interopRequireWildcard"],[14,163,6,42,"e"],[14,164,6,42],[14,166,6,42,"t"],[14,167,6,42],[14,176,6,42,"t"],[14,177,6,42],[14,181,6,42,"e"],[14,182,6,42],[14,186,6,42,"e"],[14,187,6,42],[14,188,6,42,"__esModule"],[14,198,6,42],[14,207,6,42,"e"],[14,208,6,42],[14,214,6,42,"o"],[14,215,6,42],[14,217,6,42,"i"],[14,218,6,42],[14,220,6,42,"f"],[14,221,6,42],[14,226,6,42,"__proto__"],[14,235,6,42],[14,243,6,42,"default"],[14,250,6,42],[14,252,6,42,"e"],[14,253,6,42],[14,270,6,42,"e"],[14,271,6,42],[14,294,6,42,"e"],[14,295,6,42],[14,320,6,42,"e"],[14,321,6,42],[14,330,6,42,"f"],[14,331,6,42],[14,337,6,42,"o"],[14,338,6,42],[14,341,6,42,"t"],[14,342,6,42],[14,345,6,42,"n"],[14,346,6,42],[14,349,6,42,"r"],[14,350,6,42],[14,358,6,42,"o"],[14,359,6,42],[14,360,6,42,"has"],[14,363,6,42],[14,364,6,42,"e"],[14,365,6,42],[14,375,6,42,"o"],[14,376,6,42],[14,377,6,42,"get"],[14,380,6,42],[14,381,6,42,"e"],[14,382,6,42],[14,385,6,42,"o"],[14,386,6,42],[14,387,6,42,"set"],[14,390,6,42],[14,391,6,42,"e"],[14,392,6,42],[14,394,6,42,"f"],[14,395,6,42],[14,411,6,42,"t"],[14,412,6,42],[14,416,6,42,"e"],[14,417,6,42],[14,433,6,42,"t"],[14,434,6,42],[14,441,6,42,"hasOwnProperty"],[14,455,6,42],[14,456,6,42,"call"],[14,460,6,42],[14,461,6,42,"e"],[14,462,6,42],[14,464,6,42,"t"],[14,465,6,42],[14,472,6,42,"i"],[14,473,6,42],[14,477,6,42,"o"],[14,478,6,42],[14,481,6,42,"Object"],[14,487,6,42],[14,488,6,42,"defineProperty"],[14,502,6,42],[14,507,6,42,"Object"],[14,513,6,42],[14,514,6,42,"getOwnPropertyDescriptor"],[14,538,6,42],[14,539,6,42,"e"],[14,540,6,42],[14,542,6,42,"t"],[14,543,6,42],[14,550,6,42,"i"],[14,551,6,42],[14,552,6,42,"get"],[14,555,6,42],[14,559,6,42,"i"],[14,560,6,42],[14,561,6,42,"set"],[14,564,6,42],[14,568,6,42,"o"],[14,569,6,42],[14,570,6,42,"f"],[14,571,6,42],[14,573,6,42,"t"],[14,574,6,42],[14,576,6,42,"i"],[14,577,6,42],[14,581,6,42,"f"],[14,582,6,42],[14,583,6,42,"t"],[14,584,6,42],[14,588,6,42,"e"],[14,589,6,42],[14,590,6,42,"t"],[14,591,6,42],[14,602,6,42,"f"],[14,603,6,42],[14,608,6,42,"e"],[14,609,6,42],[14,611,6,42,"t"],[14,612,6,42],[15,2,1,0],[15,11,1,9,"_extends"],[15,19,1,17,"_extends"],[15,20,1,17],[15,22,1,20],[16,4,1,22],[16,11,1,29,"_extends"],[16,19,1,37],[16,22,1,40,"Object"],[16,28,1,46],[16,29,1,47,"assign"],[16,35,1,53],[16,38,1,56,"Object"],[16,44,1,62],[16,45,1,63,"assign"],[16,51,1,69],[16,52,1,70,"bind"],[16,56,1,74],[16,57,1,75],[16,58,1,76],[16,61,1,79],[16,71,1,89,"n"],[16,72,1,90],[16,74,1,92],[17,6,1,94],[17,11,1,99],[17,15,1,103,"e"],[17,16,1,104],[17,19,1,107],[17,20,1,108],[17,22,1,110,"e"],[17,23,1,111],[17,26,1,114,"arguments"],[17,35,1,123],[17,36,1,124,"length"],[17,42,1,130],[17,44,1,132,"e"],[17,45,1,133],[17,47,1,135],[17,49,1,137],[18,8,1,139],[18,12,1,143,"t"],[18,13,1,144],[18,16,1,147,"arguments"],[18,25,1,156],[18,26,1,157,"e"],[18,27,1,158],[18,28,1,159],[19,8,1,161],[19,13,1,166],[19,17,1,170,"r"],[19,18,1,171],[19,22,1,175,"t"],[19,23,1,176],[19,25,1,178],[19,26,1,179],[19,27,1,180],[19,28,1,181],[19,30,1,183,"hasOwnProperty"],[19,44,1,197],[19,45,1,198,"call"],[19,49,1,202],[19,50,1,203,"t"],[19,51,1,204],[19,53,1,206,"r"],[19,54,1,207],[19,55,1,208],[19,60,1,213,"n"],[19,61,1,214],[19,62,1,215,"r"],[19,63,1,216],[19,64,1,217],[19,67,1,220,"t"],[19,68,1,221],[19,69,1,222,"r"],[19,70,1,223],[19,71,1,224],[19,72,1,225],[20,6,1,227],[21,6,1,229],[21,13,1,236,"n"],[21,14,1,237],[22,4,1,239],[22,5,1,240],[22,7,1,242,"_extends"],[22,15,1,250],[22,16,1,251,"apply"],[22,21,1,256],[22,22,1,257],[22,26,1,261],[22,28,1,263,"arguments"],[22,37,1,272],[22,38,1,273],[23,2,1,275],[24,2,7,7],[24,11,7,16,"getAdornmentConfig"],[24,29,7,34,"getAdornmentConfig"],[24,30,7,35],[25,4,8,2,"left"],[25,8,8,6],[26,4,9,2,"right"],[27,2,10,0],[27,3,10,1],[27,5,10,3],[28,4,11,2],[28,8,11,6,"adornmentConfig"],[28,23,11,21],[28,26,11,24],[28,28,11,26],[29,4,12,2],[29,8,12,6,"left"],[29,12,12,10],[29,16,12,14,"right"],[29,21,12,19],[29,23,12,21],[30,6,13,4],[30,7,13,5],[31,8,14,6,"side"],[31,12,14,10],[31,14,14,12,"AdornmentSide"],[31,34,14,25],[31,35,14,26,"Left"],[31,39,14,30],[32,8,15,6,"adornment"],[32,17,15,15],[32,19,15,17,"left"],[33,6,16,4],[33,7,16,5],[33,9,16,7],[34,8,17,6,"side"],[34,12,17,10],[34,14,17,12,"AdornmentSide"],[34,34,17,25],[34,35,17,26,"Right"],[34,40,17,31],[35,8,18,6,"adornment"],[35,17,18,15],[35,19,18,17,"right"],[36,6,19,4],[36,7,19,5],[36,8,19,6],[36,9,19,7,"forEach"],[36,16,19,14],[36,17,19,15],[36,18,19,16],[37,8,20,6,"side"],[37,12,20,10],[38,8,21,6,"adornment"],[39,6,22,4],[39,7,22,5],[39,12,22,10],[40,8,23,6],[40,12,23,10,"adornment"],[40,21,23,19],[40,25,23,23],[40,38,23,36,"React"],[40,52,23,41],[40,53,23,42,"isValidElement"],[40,67,23,56],[40,68,23,57,"adornment"],[40,77,23,66],[40,78,23,67],[40,80,23,69],[41,10,24,8],[41,14,24,12,"type"],[41,18,24,16],[42,10,25,8],[42,14,25,12,"adornment"],[42,23,25,21],[42,24,25,22,"type"],[42,28,25,26],[42,33,25,31,"TextInputAffix"],[42,56,25,45],[42,58,25,47],[43,12,26,10,"type"],[43,16,26,14],[43,19,26,17,"AdornmentType"],[43,39,26,30],[43,40,26,31,"Affix"],[43,45,26,36],[44,10,27,8],[44,11,27,9],[44,17,27,15],[44,21,27,19,"adornment"],[44,30,27,28],[44,31,27,29,"type"],[44,35,27,33],[44,40,27,38,"TextInputIcon"],[44,62,27,51],[44,64,27,53],[45,12,28,10,"type"],[45,16,28,14],[45,19,28,17,"AdornmentType"],[45,39,28,30],[45,40,28,31,"Icon"],[45,44,28,35],[46,10,29,8],[47,10,30,8,"adornmentConfig"],[47,25,30,23],[47,26,30,24,"push"],[47,30,30,28],[47,31,30,29],[48,12,31,10,"side"],[48,16,31,14],[49,12,32,10,"type"],[50,10,33,8],[50,11,33,9],[50,12,33,10],[51,8,34,6],[52,6,35,4],[52,7,35,5],[52,8,35,6],[53,4,36,2],[54,4,37,2],[54,11,37,9,"adornmentConfig"],[54,26,37,24],[55,2,38,0],[56,2,39,7],[56,11,39,16,"getAdornmentStyleAdjustmentForNativeInput"],[56,52,39,57,"getAdornmentStyleAdjustmentForNativeInput"],[56,53,39,58],[57,4,40,2,"adornmentConfig"],[57,19,40,17],[58,4,41,2,"leftAffixWidth"],[58,18,41,16],[59,4,42,2,"rightAffixWidth"],[59,19,42,17],[60,4,43,2,"paddingHorizontal"],[60,21,43,19],[61,4,44,2,"inputOffset"],[61,15,44,13],[61,18,44,16],[61,19,44,17],[62,4,45,2,"mode"],[62,8,45,6],[63,4,46,2,"isV3"],[64,2,47,0],[64,3,47,1],[64,5,47,3],[65,4,48,2],[65,10,48,8],[66,6,49,4,"OUTLINED_INPUT_OFFSET"],[66,27,49,25],[67,6,50,4,"ADORNMENT_OFFSET"],[68,4,51,2],[68,5,51,3],[68,8,51,6],[68,12,51,6,"getConstants"],[68,33,51,18],[68,35,51,19,"isV3"],[68,39,51,23],[68,40,51,24],[69,4,52,2],[69,8,52,6,"adornmentConfig"],[69,23,52,21],[69,24,52,22,"length"],[69,30,52,28],[69,32,52,30],[70,6,53,4],[70,12,53,10,"adornmentStyleAdjustmentForNativeInput"],[70,50,53,48],[70,53,53,51,"adornmentConfig"],[70,68,53,66],[70,69,53,67,"map"],[70,72,53,70],[70,73,53,71],[70,74,53,72],[71,8,54,6,"type"],[71,12,54,10],[72,8,55,6,"side"],[73,6,56,4],[73,7,56,5],[73,12,56,10],[74,8,57,6],[74,14,57,12,"isLeftSide"],[74,24,57,22],[74,27,57,25,"side"],[74,31,57,29],[74,36,57,34,"AdornmentSide"],[74,56,57,47],[74,57,57,48,"Left"],[74,61,57,52],[75,8,58,6],[75,14,58,12,"inputModeAdornemntOffset"],[75,38,58,36],[75,41,58,39,"mode"],[75,45,58,43],[75,50,58,48,"InputMode"],[75,66,58,57],[75,67,58,58,"Outlined"],[75,75,58,66],[75,78,58,69,"ADORNMENT_OFFSET"],[75,94,58,85],[75,97,58,88,"OUTLINED_INPUT_OFFSET"],[75,118,58,109],[75,121,58,112,"ADORNMENT_OFFSET"],[75,137,58,128],[76,8,59,6],[76,14,59,12,"paddingKey"],[76,24,59,22],[76,27,59,25],[76,37,59,35,"captalize"],[76,46,59,44],[76,47,59,45,"side"],[76,51,59,49],[76,52,59,50],[76,54,59,52],[77,8,60,6],[77,14,60,12,"affixWidth"],[77,24,60,22],[77,27,60,25,"isLeftSide"],[77,37,60,35],[77,40,60,38,"leftAffixWidth"],[77,54,60,52],[77,57,60,55,"rightAffixWidth"],[77,72,60,70],[78,8,61,6],[78,14,61,12,"padding"],[78,21,61,19],[78,24,61,22],[78,31,61,29,"paddingHorizontal"],[78,48,61,46],[78,53,61,51],[78,61,61,59],[78,64,61,62,"paddingHorizontal"],[78,81,61,79],[78,84,61,82,"inputModeAdornemntOffset"],[78,108,61,106],[79,8,62,6],[79,14,62,12,"offset"],[79,20,62,18],[79,23,62,21,"affixWidth"],[79,33,62,31],[79,36,62,34,"padding"],[79,43,62,41],[80,8,63,6],[80,14,63,12,"isAffix"],[80,21,63,19],[80,24,63,22,"type"],[80,28,63,26],[80,33,63,31,"AdornmentType"],[80,53,63,44],[80,54,63,45,"Affix"],[80,59,63,50],[81,8,64,6],[81,14,64,12,"marginKey"],[81,23,64,21],[81,26,64,24],[81,35,64,33,"captalize"],[81,44,64,42],[81,45,64,43,"side"],[81,49,64,47],[81,50,64,48],[81,52,64,50],[82,8,65,6],[82,15,65,13],[83,10,66,8],[83,11,66,9,"marginKey"],[83,20,66,18],[83,23,66,21,"isAffix"],[83,30,66,28],[83,33,66,31],[83,34,66,32],[83,37,66,35,"offset"],[83,43,66,41],[84,10,67,8],[84,11,67,9,"paddingKey"],[84,21,67,19],[84,24,67,22,"isAffix"],[84,31,67,29],[84,34,67,32,"offset"],[84,40,67,38],[84,43,67,41,"inputOffset"],[85,8,68,6],[85,9,68,7],[86,6,69,4],[86,7,69,5],[86,8,69,6],[87,6,70,4],[87,12,70,10,"allStyleAdjustmentsMerged"],[87,37,70,35],[87,40,70,38,"adornmentStyleAdjustmentForNativeInput"],[87,78,70,76],[87,79,70,77,"reduce"],[87,85,70,83],[87,86,70,84],[87,87,70,85,"mergedStyles"],[87,99,70,97],[87,101,70,99,"currentStyle"],[87,113,70,111],[87,118,70,116],[88,8,71,6],[88,15,71,6,"Object"],[88,21,71,6],[88,22,71,6,"assign"],[88,28,71,6],[88,33,72,11,"mergedStyles"],[88,45,72,23],[88,47,73,11,"currentStyle"],[88,59,73,23],[89,6,75,4],[89,7,75,5],[89,9,75,7],[89,10,75,8],[89,11,75,9],[89,12,75,10],[90,6,76,4],[90,13,76,11,"allStyleAdjustmentsMerged"],[90,38,76,36],[91,4,77,2],[91,5,77,3],[91,11,77,9],[92,6,78,4],[92,13,78,11],[92,14,78,12],[92,15,78,13],[92,16,78,14],[92,17,78,15],[93,4,79,2],[94,2,80,0],[95,2,81,0],[95,8,81,6,"captalize"],[95,17,81,15],[95,20,81,18,"text"],[95,24,81,22],[95,28,81,26,"text"],[95,32,81,30],[95,33,81,31,"charAt"],[95,39,81,37],[95,40,81,38],[95,41,81,39],[95,42,81,40],[95,43,81,41,"toUpperCase"],[95,54,81,52],[95,55,81,53],[95,56,81,54],[95,59,81,57,"text"],[95,63,81,61],[95,64,81,62,"slice"],[95,69,81,67],[95,70,81,68],[95,71,81,69],[95,72,81,70],[96,2,82,0],[96,8,82,6,"TextInputAdornment"],[96,26,82,24],[96,29,82,27,"TextInputAdornment"],[96,30,82,28],[97,4,83,2,"adornmentConfig"],[97,19,83,17],[98,4,84,2,"left"],[98,8,84,6],[99,4,85,2,"right"],[99,9,85,7],[100,4,86,2,"onAffixChange"],[100,17,86,15],[101,4,87,2,"textStyle"],[101,13,87,11],[102,4,88,2,"visible"],[102,11,88,9],[103,4,89,2,"topPosition"],[103,15,89,13],[104,4,90,2,"isTextInputFocused"],[104,22,90,20],[105,4,91,2,"forceFocus"],[105,14,91,12],[106,4,92,2,"paddingHorizontal"],[106,21,92,19],[107,4,93,2,"maxFontSizeMultiplier"],[107,25,93,23],[108,4,94,2,"theme"],[108,9,94,7],[109,4,95,2,"disabled"],[110,2,96,0],[110,3,96,1],[110,8,96,6],[111,4,97,2],[111,8,97,6,"adornmentConfig"],[111,23,97,21],[111,24,97,22,"length"],[111,30,97,28],[111,32,97,30],[112,6,98,4],[112,13,98,11],[112,26,98,24,"React"],[112,40,98,29],[112,41,98,30,"createElement"],[112,54,98,43],[112,55,98,44,"React"],[112,69,98,49],[112,70,98,50,"Fragment"],[112,78,98,58],[112,80,98,60],[112,84,98,64],[112,86,98,66,"adornmentConfig"],[112,101,98,81],[112,102,98,82,"map"],[112,105,98,85],[112,106,98,86],[112,107,98,87],[113,8,99,6,"type"],[113,12,99,10],[114,8,100,6,"side"],[115,6,101,4],[115,7,101,5],[115,12,101,10],[116,8,102,6],[116,12,102,10,"inputAdornmentComponent"],[116,35,102,33],[117,8,103,6],[117,12,103,10,"side"],[117,16,103,14],[117,21,103,19,"AdornmentSide"],[117,41,103,32],[117,42,103,33,"Left"],[117,46,103,37],[117,48,103,39],[118,10,104,8,"inputAdornmentComponent"],[118,33,104,31],[118,36,104,34,"left"],[118,40,104,38],[119,8,105,6],[119,9,105,7],[119,15,105,13],[119,19,105,17,"side"],[119,23,105,21],[119,28,105,26,"AdornmentSide"],[119,48,105,39],[119,49,105,40,"Right"],[119,54,105,45],[119,56,105,47],[120,10,106,8,"inputAdornmentComponent"],[120,33,106,31],[120,36,106,34,"right"],[120,41,106,39],[121,8,107,6],[122,8,108,6],[122,14,108,12,"commonProps"],[122,25,108,23],[122,28,108,26],[123,10,109,8,"side"],[123,14,109,12],[123,16,109,14,"side"],[123,20,109,18],[124,10,110,8,"testID"],[124,16,110,14],[124,18,110,16],[124,21,110,19,"side"],[124,25,110,23],[124,29,110,27,"type"],[124,33,110,31],[124,45,110,43],[125,10,111,8,"isTextInputFocused"],[125,28,111,26],[126,10,112,8,"paddingHorizontal"],[126,27,112,25],[127,10,113,8,"disabled"],[128,8,114,6],[128,9,114,7],[129,8,115,6],[129,12,115,10,"type"],[129,16,115,14],[129,21,115,19,"AdornmentType"],[129,41,115,32],[129,42,115,33,"Icon"],[129,46,115,37],[129,48,115,39],[130,10,116,8],[130,17,116,15],[130,30,116,28,"React"],[130,44,116,33],[130,45,116,34,"createElement"],[130,58,116,47],[130,59,116,48,"IconAdornment"],[130,87,116,61],[130,89,116,63,"_extends"],[130,97,116,71],[130,98,116,72],[130,99,116,73],[130,100,116,74],[130,102,116,76,"commonProps"],[130,113,116,87],[130,115,116,89],[131,12,117,10,"theme"],[131,17,117,15],[131,19,117,17,"theme"],[131,24,117,22],[132,12,118,10,"key"],[132,15,118,13],[132,17,118,15,"side"],[132,21,118,19],[133,12,119,10,"icon"],[133,16,119,14],[133,18,119,16,"inputAdornmentComponent"],[133,41,119,39],[134,12,120,10,"topPosition"],[134,23,120,21],[134,25,120,23,"topPosition"],[134,36,120,34],[134,37,120,35,"AdornmentType"],[134,57,120,48],[134,58,120,49,"Icon"],[134,62,120,53],[134,63,120,54],[135,12,121,10,"forceFocus"],[135,22,121,20],[135,24,121,22,"forceFocus"],[136,10,122,8],[136,11,122,9],[136,12,122,10],[136,13,122,11],[137,8,123,6],[137,9,123,7],[137,15,123,13],[137,19,123,17,"type"],[137,23,123,21],[137,28,123,26,"AdornmentType"],[137,48,123,39],[137,49,123,40,"Affix"],[137,54,123,45],[137,56,123,47],[138,10,124,8],[138,17,124,15],[138,30,124,28,"React"],[138,44,124,33],[138,45,124,34,"createElement"],[138,58,124,47],[138,59,124,48,"AffixAdornment"],[138,89,124,62],[138,91,124,64,"_extends"],[138,99,124,72],[138,100,124,73],[138,101,124,74],[138,102,124,75],[138,104,124,77,"commonProps"],[138,115,124,88],[138,117,124,90],[139,12,125,10,"key"],[139,15,125,13],[139,17,125,15,"side"],[139,21,125,19],[140,12,126,10,"topPosition"],[140,23,126,21],[140,25,126,23,"topPosition"],[140,36,126,34],[140,37,126,35,"AdornmentType"],[140,57,126,48],[140,58,126,49,"Affix"],[140,63,126,54],[140,64,126,55],[140,65,126,56,"side"],[140,69,126,60],[140,70,126,61],[141,12,127,10,"affix"],[141,17,127,15],[141,19,127,17,"inputAdornmentComponent"],[141,42,127,40],[142,12,128,10,"textStyle"],[142,21,128,19],[142,23,128,21,"textStyle"],[142,32,128,30],[143,12,129,10,"onLayout"],[143,20,129,18],[143,22,129,20,"onAffixChange"],[143,35,129,33],[143,36,129,34,"side"],[143,40,129,38],[143,41,129,39],[144,12,130,10,"visible"],[144,19,130,17],[144,21,130,19,"visible"],[144,28,130,26],[145,12,131,10,"maxFontSizeMultiplier"],[145,33,131,31],[145,35,131,33,"maxFontSizeMultiplier"],[146,10,132,8],[146,11,132,9],[146,12,132,10],[146,13,132,11],[147,8,133,6],[147,9,133,7],[147,15,133,13],[148,10,134,8],[148,17,134,15],[148,21,134,19],[149,8,135,6],[150,6,136,4],[150,7,136,5],[150,8,136,6],[150,9,136,7],[151,4,137,2],[151,5,137,3],[151,11,137,9],[152,6,138,4],[152,13,138,11],[152,17,138,15],[153,4,139,2],[154,2,140,0],[154,3,140,1],[155,2,140,2],[155,6,140,2,"_default"],[155,14,140,2],[155,17,140,2,"exports"],[155,24,140,2],[155,25,140,2,"default"],[155,32,140,2],[155,35,141,15,"TextInputAdornment"],[155,53,141,33],[156,0,141,33],[156,3]],"functionMap":{"names":["_extends","<anonymous>","<global>","getAdornmentConfig","forEach$argument_0","getAdornmentStyleAdjustmentForNativeInput","adornmentConfig.map$argument_0","adornmentStyleAdjustmentForNativeInput.reduce$argument_0","captalize","TextInputAdornment"],"mappings":"AAA,+EC,iKD,oCE;OCM;eCY;KDgB;CDG;OGC;uECc;KDgB;oFEC;KFK;CHK;kBMC,oDN;2BOC;sFHgB;KGsC;CPI"}},"type":"js/module"}]}