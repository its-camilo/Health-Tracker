{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"ToggleButtonGroupContext\", {\n    enumerable: true,\n    get: function () {\n      return ToggleButtonGroupContext;\n    }\n  });\n  Object.defineProperty(exports, \"ToggleButtonGroup\", {\n    enumerable: true,\n    get: function () {\n      return ToggleButtonGroup;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  const ToggleButtonGroupContext = /*#__PURE__*/\n  //@ts-expect-error: TS can't ensure the type from Group to children\n  React.createContext(null);\n\n  /**\n   * Toggle group allows to control a group of toggle buttons.</br>\n   * It doesn't change the appearance of the toggle buttons. If you want to group them in a row, check out [ToggleButton.Row](ToggleButtonRow).\n   *\n   * ## Usage\n   * ```js\n   * import * as React from 'react';\n   * import { ToggleButton } from 'react-native-paper';\n   *\n   * const MyComponent = () => {\n   *   const [value, setValue] = React.useState('left');\n   *\n   *   return (\n   *     <ToggleButton.Group\n   *       onValueChange={value => setValue(value)}\n   *       value={value}>\n   *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\n   *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\n   *     </ToggleButton.Group>\n   *   );\n   * };\n   *\n   * export default MyComponent;\n   *```\n   */\n  const ToggleButtonGroup = ({\n    value,\n    onValueChange,\n    children\n  }) => /*#__PURE__*/React.createElement(ToggleButtonGroupContext.Provider, {\n    value: {\n      value,\n      onValueChange\n    }\n  }, children);\n  ToggleButtonGroup.displayName = 'ToggleButton.Group';\n  var _default = ToggleButtonGroup;\n\n  // @component-docs ignore-next-line\n});","lineCount":85,"map":[[22,2,43,0,"Object"],[22,8,43,0],[22,9,43,0,"defineProperty"],[22,23,43,0],[22,24,43,0,"exports"],[22,31,43,0],[23,4,43,0,"enumerable"],[23,14,43,0],[24,4,43,0,"get"],[24,7,43,0],[24,18,43,0,"get"],[24,19,43,0],[25,6,43,0],[25,13,43,0,"_default"],[25,21,43,0],[26,4,43,0],[27,2,43,0],[28,2,2,0,"Object"],[28,8,2,0],[28,9,2,0,"defineProperty"],[28,23,2,0],[28,24,2,0,"exports"],[28,31,2,0],[29,4,2,0,"enumerable"],[29,14,2,0],[30,4,2,0,"get"],[30,7,2,0],[30,18,2,0,"get"],[30,19,2,0],[31,6,2,0],[31,13,2,0,"ToggleButtonGroupContext"],[31,37,2,0],[32,4,2,0],[33,2,2,0],[34,2,46,0,"Object"],[34,8,46,0],[34,9,46,0,"defineProperty"],[34,23,46,0],[34,24,46,0,"exports"],[34,31,46,0],[35,4,46,0,"enumerable"],[35,14,46,0],[36,4,46,0,"get"],[36,7,46,0],[36,18,46,0,"get"],[36,19,46,0],[37,6,46,0],[37,13,46,9,"ToggleButtonGroup"],[37,30,46,26],[38,4,46,26],[39,2,46,26],[40,2,1,0],[40,6,1,0,"_react"],[40,12,1,0],[40,15,1,0,"require"],[40,22,1,0],[40,23,1,0,"_dependencyMap"],[40,37,1,0],[41,2,1,0],[41,6,1,0,"React"],[41,11,1,0],[41,14,1,0,"_interopNamespace"],[41,31,1,0],[41,32,1,0,"_react"],[41,38,1,0],[42,2,2,7],[42,8,2,13,"ToggleButtonGroupContext"],[42,32,2,37],[42,35,3,0],[43,2,4,0],[44,2,5,0,"React"],[44,7,5,5],[44,8,5,6,"createContext"],[44,21,5,19],[44,22,5,20],[44,26,5,24],[44,27,5,25],[46,2,7,0],[47,0,8,0],[48,0,9,0],[49,0,10,0],[50,0,11,0],[51,0,12,0],[52,0,13,0],[53,0,14,0],[54,0,15,0],[55,0,16,0],[56,0,17,0],[57,0,18,0],[58,0,19,0],[59,0,20,0],[60,0,21,0],[61,0,22,0],[62,0,23,0],[63,0,24,0],[64,0,25,0],[65,0,26,0],[66,0,27,0],[67,0,28,0],[68,0,29,0],[69,0,30,0],[70,0,31,0],[71,2,32,0],[71,8,32,6,"ToggleButtonGroup"],[71,25,32,23],[71,28,32,26,"ToggleButtonGroup"],[71,29,32,27],[72,4,33,2,"value"],[72,9,33,7],[73,4,34,2,"onValueChange"],[73,17,34,15],[74,4,35,2,"children"],[75,2,36,0],[75,3,36,1],[75,8,36,6],[75,21,36,19,"React"],[75,26,36,24],[75,27,36,25,"createElement"],[75,40,36,38],[75,41,36,39,"ToggleButtonGroupContext"],[75,65,36,63],[75,66,36,64,"Provider"],[75,74,36,72],[75,76,36,74],[76,4,37,2,"value"],[76,9,37,7],[76,11,37,9],[77,6,38,4,"value"],[77,11,38,9],[78,6,39,4,"onValueChange"],[79,4,40,2],[80,2,41,0],[80,3,41,1],[80,5,41,3,"children"],[80,13,41,11],[80,14,41,12],[81,2,42,0,"ToggleButtonGroup"],[81,19,42,17],[81,20,42,18,"displayName"],[81,31,42,29],[81,34,42,32],[81,54,42,52],[82,2,43,0],[82,6,43,0,"_default"],[82,14,43,0],[82,17,43,15,"ToggleButtonGroup"],[82,34,43,32],[84,2,45,0],[85,0,45,0],[85,3]],"functionMap":{"names":["<global>","ToggleButtonGroup"],"mappings":"AAA;0BC+B;YDS"},"hasCjsExports":false},"type":"js/module"}]}