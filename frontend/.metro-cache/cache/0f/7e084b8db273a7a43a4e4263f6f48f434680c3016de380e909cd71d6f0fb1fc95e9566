{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":277},"end":{"line":2,"column":26,"index":303}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/StyleSheet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MK7+k1V+KnvCVW7Kj2k/ydtjmVU=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/View","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"4kYBDC6LJJXoH7P9rWDi3vkLVB0=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":353},"end":{"line":4,"column":39,"index":392}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../../../core/theming","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":393},"end":{"line":5,"column":57,"index":450}}],"key":"mlab4D8XNqdnXGWuRK1Fm7O1PKM=","exportNames":["*"]}},{"name":"../../IconButton/IconButton","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":451},"end":{"line":6,"column":53,"index":504}}],"key":"62Mz7hqxqjKwkGVaZqWzgNMxJAA=","exportNames":["*"]}},{"name":"../constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":505},"end":{"line":7,"column":41,"index":546}}],"key":"eTOOXVNPpMK2U8dOAmBWjbEJ4yE=","exportNames":["*"]}},{"name":"../helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":547},"end":{"line":8,"column":42,"index":589}}],"key":"sVcBW6uknPZeHJnN5Ce/W2g6wWI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.IconAdornment = void 0;\n  var _react = _interopRequireDefault(require(_dependencyMap[1], \"react\"));\n  var _StyleSheet = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/StyleSheet\"));\n  var _View = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/View\"));\n  var _utils = require(_dependencyMap[4], \"./utils\");\n  var _theming = require(_dependencyMap[5], \"../../../core/theming\");\n  var _IconButton = _interopRequireDefault(require(_dependencyMap[6], \"../../IconButton/IconButton\"));\n  var _constants = require(_dependencyMap[7], \"../constants\");\n  var _helpers = require(_dependencyMap[8], \"../helpers\");\n  function _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function (n) {\n      for (var e = 1; e < arguments.length; e++) {\n        var t = arguments[e];\n        for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n      }\n      return n;\n    }, _extends.apply(null, arguments);\n  }\n  const StyleContext = /*#__PURE__*/_react.default.createContext({\n    style: {},\n    isTextInputFocused: false,\n    forceFocus: () => {},\n    testID: ''\n  });\n  const IconAdornment = ({\n    icon,\n    topPosition,\n    side,\n    isTextInputFocused,\n    forceFocus,\n    testID,\n    theme: themeOverrides,\n    disabled\n  }) => {\n    const {\n      isV3\n    } = (0, _theming.useInternalTheme)(themeOverrides);\n    const {\n      ICON_OFFSET\n    } = (0, _helpers.getConstants)(isV3);\n    const style = {\n      top: topPosition,\n      [side]: ICON_OFFSET\n    };\n    const contextState = {\n      style,\n      isTextInputFocused,\n      forceFocus,\n      testID,\n      disabled\n    };\n    return /*#__PURE__*/_react.default.createElement(StyleContext.Provider, {\n      value: contextState\n    }, icon);\n  };\n\n  /**\n   * A component to render a leading / trailing icon in the TextInput\n   *\n   * ## Usage\n   * ```js\n   * import * as React from 'react';\n   * import { TextInput } from 'react-native-paper';\n   *\n   * const MyComponent = () => {\n   *   const [text, setText] = React.useState('');\n   *\n   *   return (\n   *     <TextInput\n   *       label=\"Password\"\n   *       secureTextEntry\n   *       right={<TextInput.Icon icon=\"eye\" />}\n   *     />\n   *   );\n   * };\n   *\n   * export default MyComponent;\n   * ```\n   */\n  exports.IconAdornment = IconAdornment;\n  const TextInputIcon = ({\n    icon,\n    onPress,\n    forceTextInputFocus = true,\n    color: customColor,\n    theme: themeOverrides,\n    rippleColor,\n    ...rest\n  }) => {\n    const {\n      style,\n      isTextInputFocused,\n      forceFocus,\n      testID,\n      disabled\n    } = _react.default.useContext(StyleContext);\n    const onPressWithFocusControl = _react.default.useCallback(e => {\n      if (forceTextInputFocus && !isTextInputFocused) {\n        forceFocus();\n      }\n      onPress === null || onPress === void 0 || onPress(e);\n    }, [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]);\n    const theme = (0, _theming.useInternalTheme)(themeOverrides);\n    const iconColor = (0, _utils.getIconColor)({\n      theme,\n      disabled,\n      isTextInputFocused,\n      customColor\n    });\n    return /*#__PURE__*/_react.default.createElement(_View.default, {\n      style: [styles.container, style]\n    }, /*#__PURE__*/_react.default.createElement(_IconButton.default, _extends({\n      icon: icon,\n      style: styles.iconButton,\n      size: _constants.ICON_SIZE,\n      onPress: onPressWithFocusControl,\n      iconColor: iconColor,\n      testID: testID,\n      theme: themeOverrides,\n      rippleColor: rippleColor\n    }, rest)));\n  };\n  TextInputIcon.displayName = 'TextInput.Icon';\n  const styles = _StyleSheet.default.create({\n    container: {\n      position: 'absolute',\n      width: _constants.ICON_SIZE,\n      height: _constants.ICON_SIZE,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    iconButton: {\n      margin: 0\n    }\n  });\n  var _default = exports.default = TextInputIcon; // @component-docs ignore-next-line\n});","lineCount":142,"map":[[7,2,2,0],[7,6,2,0,"_react"],[7,12,2,0],[7,15,2,0,"_interopRequireDefault"],[7,37,2,0],[7,38,2,0,"require"],[7,45,2,0],[7,46,2,0,"_dependencyMap"],[7,60,2,0],[8,2,2,26],[8,6,2,26,"_StyleSheet"],[8,17,2,26],[8,20,2,26,"_interopRequireDefault"],[8,42,2,26],[8,43,2,26,"require"],[8,50,2,26],[8,51,2,26,"_dependencyMap"],[8,65,2,26],[9,2,2,26],[9,6,2,26,"_View"],[9,11,2,26],[9,14,2,26,"_interopRequireDefault"],[9,36,2,26],[9,37,2,26,"require"],[9,44,2,26],[9,45,2,26,"_dependencyMap"],[9,59,2,26],[10,2,4,0],[10,6,4,0,"_utils"],[10,12,4,0],[10,15,4,0,"require"],[10,22,4,0],[10,23,4,0,"_dependencyMap"],[10,37,4,0],[11,2,5,0],[11,6,5,0,"_theming"],[11,14,5,0],[11,17,5,0,"require"],[11,24,5,0],[11,25,5,0,"_dependencyMap"],[11,39,5,0],[12,2,6,0],[12,6,6,0,"_IconButton"],[12,17,6,0],[12,20,6,0,"_interopRequireDefault"],[12,42,6,0],[12,43,6,0,"require"],[12,50,6,0],[12,51,6,0,"_dependencyMap"],[12,65,6,0],[13,2,7,0],[13,6,7,0,"_constants"],[13,16,7,0],[13,19,7,0,"require"],[13,26,7,0],[13,27,7,0,"_dependencyMap"],[13,41,7,0],[14,2,8,0],[14,6,8,0,"_helpers"],[14,14,8,0],[14,17,8,0,"require"],[14,24,8,0],[14,25,8,0,"_dependencyMap"],[14,39,8,0],[15,2,1,0],[15,11,1,9,"_extends"],[15,19,1,17,"_extends"],[15,20,1,17],[15,22,1,20],[16,4,1,22],[16,11,1,29,"_extends"],[16,19,1,37],[16,22,1,40,"Object"],[16,28,1,46],[16,29,1,47,"assign"],[16,35,1,53],[16,38,1,56,"Object"],[16,44,1,62],[16,45,1,63,"assign"],[16,51,1,69],[16,52,1,70,"bind"],[16,56,1,74],[16,57,1,75],[16,58,1,76],[16,61,1,79],[16,71,1,89,"n"],[16,72,1,90],[16,74,1,92],[17,6,1,94],[17,11,1,99],[17,15,1,103,"e"],[17,16,1,104],[17,19,1,107],[17,20,1,108],[17,22,1,110,"e"],[17,23,1,111],[17,26,1,114,"arguments"],[17,35,1,123],[17,36,1,124,"length"],[17,42,1,130],[17,44,1,132,"e"],[17,45,1,133],[17,47,1,135],[17,49,1,137],[18,8,1,139],[18,12,1,143,"t"],[18,13,1,144],[18,16,1,147,"arguments"],[18,25,1,156],[18,26,1,157,"e"],[18,27,1,158],[18,28,1,159],[19,8,1,161],[19,13,1,166],[19,17,1,170,"r"],[19,18,1,171],[19,22,1,175,"t"],[19,23,1,176],[19,25,1,178],[19,26,1,179],[19,27,1,180],[19,28,1,181],[19,30,1,183,"hasOwnProperty"],[19,44,1,197],[19,45,1,198,"call"],[19,49,1,202],[19,50,1,203,"t"],[19,51,1,204],[19,53,1,206,"r"],[19,54,1,207],[19,55,1,208],[19,60,1,213,"n"],[19,61,1,214],[19,62,1,215,"r"],[19,63,1,216],[19,64,1,217],[19,67,1,220,"t"],[19,68,1,221],[19,69,1,222,"r"],[19,70,1,223],[19,71,1,224],[19,72,1,225],[20,6,1,227],[21,6,1,229],[21,13,1,236,"n"],[21,14,1,237],[22,4,1,239],[22,5,1,240],[22,7,1,242,"_extends"],[22,15,1,250],[22,16,1,251,"apply"],[22,21,1,256],[22,22,1,257],[22,26,1,261],[22,28,1,263,"arguments"],[22,37,1,272],[22,38,1,273],[23,2,1,275],[24,2,9,0],[24,8,9,6,"StyleContext"],[24,20,9,18],[24,23,9,21],[24,36,9,34,"React"],[24,50,9,39],[24,51,9,40,"createContext"],[24,64,9,53],[24,65,9,54],[25,4,10,2,"style"],[25,9,10,7],[25,11,10,9],[25,12,10,10],[25,13,10,11],[26,4,11,2,"isTextInputFocused"],[26,22,11,20],[26,24,11,22],[26,29,11,27],[27,4,12,2,"forceFocus"],[27,14,12,12],[27,16,12,14,"forceFocus"],[27,17,12,14],[27,22,12,20],[27,23,12,21],[27,24,12,22],[28,4,13,2,"testID"],[28,10,13,8],[28,12,13,10],[29,2,14,0],[29,3,14,1],[29,4,14,2],[30,2,15,0],[30,8,15,6,"IconAdornment"],[30,21,15,19],[30,24,15,22,"IconAdornment"],[30,25,15,23],[31,4,16,2,"icon"],[31,8,16,6],[32,4,17,2,"topPosition"],[32,15,17,13],[33,4,18,2,"side"],[33,8,18,6],[34,4,19,2,"isTextInputFocused"],[34,22,19,20],[35,4,20,2,"forceFocus"],[35,14,20,12],[36,4,21,2,"testID"],[36,10,21,8],[37,4,22,2,"theme"],[37,9,22,7],[37,11,22,9,"themeOverrides"],[37,25,22,23],[38,4,23,2,"disabled"],[39,2,24,0],[39,3,24,1],[39,8,24,6],[40,4,25,2],[40,10,25,8],[41,6,26,4,"isV3"],[42,4,27,2],[42,5,27,3],[42,8,27,6],[42,12,27,6,"useInternalTheme"],[42,37,27,22],[42,39,27,23,"themeOverrides"],[42,53,27,37],[42,54,27,38],[43,4,28,2],[43,10,28,8],[44,6,29,4,"ICON_OFFSET"],[45,4,30,2],[45,5,30,3],[45,8,30,6],[45,12,30,6,"getConstants"],[45,33,30,18],[45,35,30,19,"isV3"],[45,39,30,23],[45,40,30,24],[46,4,31,2],[46,10,31,8,"style"],[46,15,31,13],[46,18,31,16],[47,6,32,4,"top"],[47,9,32,7],[47,11,32,9,"topPosition"],[47,22,32,20],[48,6,33,4],[48,7,33,5,"side"],[48,11,33,9],[48,14,33,12,"ICON_OFFSET"],[49,4,34,2],[49,5,34,3],[50,4,35,2],[50,10,35,8,"contextState"],[50,22,35,20],[50,25,35,23],[51,6,36,4,"style"],[51,11,36,9],[52,6,37,4,"isTextInputFocused"],[52,24,37,22],[53,6,38,4,"forceFocus"],[53,16,38,14],[54,6,39,4,"testID"],[54,12,39,10],[55,6,40,4,"disabled"],[56,4,41,2],[56,5,41,3],[57,4,42,2],[57,11,42,9],[57,24,42,22,"React"],[57,38,42,27],[57,39,42,28,"createElement"],[57,52,42,41],[57,53,42,42,"StyleContext"],[57,65,42,54],[57,66,42,55,"Provider"],[57,74,42,63],[57,76,42,65],[58,6,43,4,"value"],[58,11,43,9],[58,13,43,11,"contextState"],[59,4,44,2],[59,5,44,3],[59,7,44,5,"icon"],[59,11,44,9],[59,12,44,10],[60,2,45,0],[60,3,45,1],[62,2,47,0],[63,0,48,0],[64,0,49,0],[65,0,50,0],[66,0,51,0],[67,0,52,0],[68,0,53,0],[69,0,54,0],[70,0,55,0],[71,0,56,0],[72,0,57,0],[73,0,58,0],[74,0,59,0],[75,0,60,0],[76,0,61,0],[77,0,62,0],[78,0,63,0],[79,0,64,0],[80,0,65,0],[81,0,66,0],[82,0,67,0],[83,0,68,0],[84,0,69,0],[85,2,47,0,"exports"],[85,9,47,0],[85,10,47,0,"IconAdornment"],[85,23,47,0],[85,26,47,0,"IconAdornment"],[85,39,47,0],[86,2,71,0],[86,8,71,6,"TextInputIcon"],[86,21,71,19],[86,24,71,22,"TextInputIcon"],[86,25,71,23],[87,4,72,2,"icon"],[87,8,72,6],[88,4,73,2,"onPress"],[88,11,73,9],[89,4,74,2,"forceTextInputFocus"],[89,23,74,21],[89,26,74,24],[89,30,74,28],[90,4,75,2,"color"],[90,9,75,7],[90,11,75,9,"customColor"],[90,22,75,20],[91,4,76,2,"theme"],[91,9,76,7],[91,11,76,9,"themeOverrides"],[91,25,76,23],[92,4,77,2,"rippleColor"],[92,15,77,13],[93,4,78,2],[93,7,78,5,"rest"],[94,2,79,0],[94,3,79,1],[94,8,79,6],[95,4,80,2],[95,10,80,8],[96,6,81,4,"style"],[96,11,81,9],[97,6,82,4,"isTextInputFocused"],[97,24,82,22],[98,6,83,4,"forceFocus"],[98,16,83,14],[99,6,84,4,"testID"],[99,12,84,10],[100,6,85,4,"disabled"],[101,4,86,2],[101,5,86,3],[101,8,86,6,"React"],[101,22,86,11],[101,23,86,12,"useContext"],[101,33,86,22],[101,34,86,23,"StyleContext"],[101,46,86,35],[101,47,86,36],[102,4,87,2],[102,10,87,8,"onPressWithFocusControl"],[102,33,87,31],[102,36,87,34,"React"],[102,50,87,39],[102,51,87,40,"useCallback"],[102,62,87,51],[102,63,87,52,"e"],[102,64,87,53],[102,68,87,57],[103,6,88,4],[103,10,88,8,"forceTextInputFocus"],[103,29,88,27],[103,33,88,31],[103,34,88,32,"isTextInputFocused"],[103,52,88,50],[103,54,88,52],[104,8,89,6,"forceFocus"],[104,18,89,16],[104,19,89,17],[104,20,89,18],[105,6,90,4],[106,6,91,4,"onPress"],[106,13,91,11],[106,18,91,16],[106,22,91,20],[106,26,91,24,"onPress"],[106,33,91,31],[106,38,91,36],[106,43,91,41],[106,44,91,42],[106,48,91,46,"onPress"],[106,55,91,53],[106,56,91,54,"e"],[106,57,91,55],[106,58,91,56],[107,4,92,2],[107,5,92,3],[107,7,92,5],[107,8,92,6,"forceTextInputFocus"],[107,27,92,25],[107,29,92,27,"forceFocus"],[107,39,92,37],[107,41,92,39,"isTextInputFocused"],[107,59,92,57],[107,61,92,59,"onPress"],[107,68,92,66],[107,69,92,67],[107,70,92,68],[108,4,93,2],[108,10,93,8,"theme"],[108,15,93,13],[108,18,93,16],[108,22,93,16,"useInternalTheme"],[108,47,93,32],[108,49,93,33,"themeOverrides"],[108,63,93,47],[108,64,93,48],[109,4,94,2],[109,10,94,8,"iconColor"],[109,19,94,17],[109,22,94,20],[109,26,94,20,"getIconColor"],[109,45,94,32],[109,47,94,33],[110,6,95,4,"theme"],[110,11,95,9],[111,6,96,4,"disabled"],[111,14,96,12],[112,6,97,4,"isTextInputFocused"],[112,24,97,22],[113,6,98,4,"customColor"],[114,4,99,2],[114,5,99,3],[114,6,99,4],[115,4,100,2],[115,11,100,9],[115,24,100,22,"React"],[115,38,100,27],[115,39,100,28,"createElement"],[115,52,100,41],[115,53,100,42,"View"],[115,66,100,46],[115,68,100,48],[116,6,101,4,"style"],[116,11,101,9],[116,13,101,11],[116,14,101,12,"styles"],[116,20,101,18],[116,21,101,19,"container"],[116,30,101,28],[116,32,101,30,"style"],[116,37,101,35],[117,4,102,2],[117,5,102,3],[117,7,102,5],[117,20,102,18,"React"],[117,34,102,23],[117,35,102,24,"createElement"],[117,48,102,37],[117,49,102,38,"IconButton"],[117,68,102,48],[117,70,102,50,"_extends"],[117,78,102,58],[117,79,102,59],[118,6,103,4,"icon"],[118,10,103,8],[118,12,103,10,"icon"],[118,16,103,14],[119,6,104,4,"style"],[119,11,104,9],[119,13,104,11,"styles"],[119,19,104,17],[119,20,104,18,"iconButton"],[119,30,104,28],[120,6,105,4,"size"],[120,10,105,8],[120,12,105,10,"ICON_SIZE"],[120,32,105,19],[121,6,106,4,"onPress"],[121,13,106,11],[121,15,106,13,"onPressWithFocusControl"],[121,38,106,36],[122,6,107,4,"iconColor"],[122,15,107,13],[122,17,107,15,"iconColor"],[122,26,107,24],[123,6,108,4,"testID"],[123,12,108,10],[123,14,108,12,"testID"],[123,20,108,18],[124,6,109,4,"theme"],[124,11,109,9],[124,13,109,11,"themeOverrides"],[124,27,109,25],[125,6,110,4,"rippleColor"],[125,17,110,15],[125,19,110,17,"rippleColor"],[126,4,111,2],[126,5,111,3],[126,7,111,5,"rest"],[126,11,111,9],[126,12,111,10],[126,13,111,11],[126,14,111,12],[127,2,112,0],[127,3,112,1],[128,2,113,0,"TextInputIcon"],[128,15,113,13],[128,16,113,14,"displayName"],[128,27,113,25],[128,30,113,28],[128,46,113,44],[129,2,114,0],[129,8,114,6,"styles"],[129,14,114,12],[129,17,114,15,"StyleSheet"],[129,36,114,25],[129,37,114,26,"create"],[129,43,114,32],[129,44,114,33],[130,4,115,2,"container"],[130,13,115,11],[130,15,115,13],[131,6,116,4,"position"],[131,14,116,12],[131,16,116,14],[131,26,116,24],[132,6,117,4,"width"],[132,11,117,9],[132,13,117,11,"ICON_SIZE"],[132,33,117,20],[133,6,118,4,"height"],[133,12,118,10],[133,14,118,12,"ICON_SIZE"],[133,34,118,21],[134,6,119,4,"justifyContent"],[134,20,119,18],[134,22,119,20],[134,30,119,28],[135,6,120,4,"alignItems"],[135,16,120,14],[135,18,120,16],[136,4,121,2],[136,5,121,3],[137,4,122,2,"iconButton"],[137,14,122,12],[137,16,122,14],[138,6,123,4,"margin"],[138,12,123,10],[138,14,123,12],[139,4,124,2],[140,2,125,0],[140,3,125,1],[140,4,125,2],[141,2,125,3],[141,6,125,3,"_default"],[141,14,125,3],[141,17,125,3,"exports"],[141,24,125,3],[141,25,125,3,"default"],[141,32,125,3],[141,35,126,15,"TextInputIcon"],[141,48,126,28],[141,50,128,0],[142,0,128,0],[142,3]],"functionMap":{"names":["_extends","<anonymous>","<global>","React.createContext$argument_0.forceFocus","IconAdornment","TextInputIcon","onPressWithFocusControl"],"mappings":"AAA,+EC,iKD,oCE;cCW,QD;sBEG;CF8B;sBG0B;oDCgB;GDK;CHoB"}},"type":"js/module"}]}