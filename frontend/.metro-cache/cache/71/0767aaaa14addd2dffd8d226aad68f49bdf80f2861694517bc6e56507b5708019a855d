{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":277},"end":{"line":2,"column":31,"index":308}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Animated","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dNPzxVfn0yBoRxvhD+vE+lN7k4Q=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/StyleSheet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MK7+k1V+KnvCVW7Kj2k/ydtjmVU=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/useWindowDimensions","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"0ikdYt1LN5CrMAiC+3F4o1iOHac=","exportNames":["*"],"imports":1}},{"name":"../core/theming","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":383},"end":{"line":4,"column":51,"index":434}}],"key":"L+v9Af6Gqk4R9/3dmKsTa7ikz50=","exportNames":["*"],"imports":1}},{"name":"../styles/themes/v2/colors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":435},"end":{"line":5,"column":58,"index":493}}],"key":"rAPudV/tGglh9F13LAaJ9KMhA60=","exportNames":["*"],"imports":1}},{"name":"../utils/getContrastingColor","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":494},"end":{"line":6,"column":63,"index":557}}],"key":"NDU7h9cHZwGxsYzzdyte0lNKjvQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNativeWebDistExportsAnimated = require(_dependencyMap[1], \"react-native-web/dist/exports/Animated\");\n  var Animated = _interopDefault(_reactNativeWebDistExportsAnimated);\n  var _reactNativeWebDistExportsStyleSheet = require(_dependencyMap[2], \"react-native-web/dist/exports/StyleSheet\");\n  var StyleSheet = _interopDefault(_reactNativeWebDistExportsStyleSheet);\n  var _reactNativeWebDistExportsUseWindowDimensions = require(_dependencyMap[3], \"react-native-web/dist/exports/useWindowDimensions\");\n  var useWindowDimensions = _interopDefault(_reactNativeWebDistExportsUseWindowDimensions);\n  var _coreTheming = require(_dependencyMap[4], \"../core/theming\");\n  var _stylesThemesV2Colors = require(_dependencyMap[5], \"../styles/themes/v2/colors\");\n  var _utilsGetContrastingColor = require(_dependencyMap[6], \"../utils/getContrastingColor\");\n  var getContrastingColor = _interopDefault(_utilsGetContrastingColor);\n  function _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function (n) {\n      for (var e = 1; e < arguments.length; e++) {\n        var t = arguments[e];\n        for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n      }\n      return n;\n    }, _extends.apply(null, arguments);\n  }\n  const defaultSize = 20;\n  /**\n   * Badges are small status descriptors for UI elements.\n   * A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object.\n   *\n   * ## Usage\n   * ```js\n   * import * as React from 'react';\n   * import { Badge } from 'react-native-paper';\n   *\n   * const MyComponent = () => (\n   *   <Badge>3</Badge>\n   * );\n   *\n   * export default MyComponent;\n   * ```\n   */\n  const Badge = ({\n    children,\n    size = defaultSize,\n    style,\n    theme: themeOverrides,\n    visible = true,\n    ...rest\n  }) => {\n    var _theme$colors;\n    const theme = (0, _coreTheming.useInternalTheme)(themeOverrides);\n    const {\n      current: opacity\n    } = React.useRef(new Animated.default.Value(visible ? 1 : 0));\n    const {\n      fontScale\n    } = (0, useWindowDimensions.default)();\n    const isFirstRendering = React.useRef(true);\n    const {\n      animation: {\n        scale\n      }\n    } = theme;\n    React.useEffect(() => {\n      // Do not run animation on very first rendering\n      if (isFirstRendering.current) {\n        isFirstRendering.current = false;\n        return;\n      }\n      Animated.default.timing(opacity, {\n        toValue: visible ? 1 : 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }, [visible, opacity, scale]);\n    const {\n      backgroundColor = theme.isV3 ? theme.colors.error : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.notification,\n      ...restStyle\n    } = StyleSheet.default.flatten(style) || {};\n    const textColor = theme.isV3 ? theme.colors.onError : (0, getContrastingColor.default)(backgroundColor, _stylesThemesV2Colors.white, _stylesThemesV2Colors.black);\n    const borderRadius = size / 2;\n    const paddingHorizontal = theme.isV3 ? 3 : 4;\n    return /*#__PURE__*/React.createElement(Animated.default.Text, _extends({\n      numberOfLines: 1,\n      style: [{\n        opacity,\n        backgroundColor,\n        color: textColor,\n        fontSize: size * 0.5,\n        ...(!theme.isV3 && theme.fonts.regular),\n        lineHeight: size / fontScale,\n        height: size,\n        minWidth: size,\n        borderRadius,\n        paddingHorizontal\n      }, styles.container, restStyle]\n    }, rest), children);\n  };\n  var _default = Badge;\n  const styles = StyleSheet.default.create({\n    container: {\n      alignSelf: 'flex-end',\n      textAlign: 'center',\n      textAlignVertical: 'center',\n      overflow: 'hidden'\n    }\n  });\n});","lineCount":137,"map":[[27,2,81,0,"Object"],[27,8,81,0],[27,9,81,0,"defineProperty"],[27,23,81,0],[27,24,81,0,"exports"],[27,31,81,0],[28,4,81,0,"enumerable"],[28,14,81,0],[29,4,81,0,"get"],[29,7,81,0],[29,18,81,0,"get"],[29,19,81,0],[30,6,81,0],[30,13,81,0,"_default"],[30,21,81,0],[31,4,81,0],[32,2,81,0],[33,2,2,0],[33,6,2,0,"_react"],[33,12,2,0],[33,15,2,0,"require"],[33,22,2,0],[33,23,2,0,"_dependencyMap"],[33,37,2,0],[34,2,2,0],[34,6,2,0,"React"],[34,11,2,0],[34,14,2,0,"_interopNamespace"],[34,31,2,0],[34,32,2,0,"_react"],[34,38,2,0],[35,2,2,31],[35,6,2,31,"_reactNativeWebDistExportsAnimated"],[35,40,2,31],[35,43,2,31,"require"],[35,50,2,31],[35,51,2,31,"_dependencyMap"],[35,65,2,31],[36,2,2,31],[36,6,2,31,"Animated"],[36,14,2,31],[36,17,2,31,"_interopDefault"],[36,32,2,31],[36,33,2,31,"_reactNativeWebDistExportsAnimated"],[36,67,2,31],[37,2,2,31],[37,6,2,31,"_reactNativeWebDistExportsStyleSheet"],[37,42,2,31],[37,45,2,31,"require"],[37,52,2,31],[37,53,2,31,"_dependencyMap"],[37,67,2,31],[38,2,2,31],[38,6,2,31,"StyleSheet"],[38,16,2,31],[38,19,2,31,"_interopDefault"],[38,34,2,31],[38,35,2,31,"_reactNativeWebDistExportsStyleSheet"],[38,71,2,31],[39,2,2,31],[39,6,2,31,"_reactNativeWebDistExportsUseWindowDimensions"],[39,51,2,31],[39,54,2,31,"require"],[39,61,2,31],[39,62,2,31,"_dependencyMap"],[39,76,2,31],[40,2,2,31],[40,6,2,31,"useWindowDimensions"],[40,25,2,31],[40,28,2,31,"_interopDefault"],[40,43,2,31],[40,44,2,31,"_reactNativeWebDistExportsUseWindowDimensions"],[40,89,2,31],[41,2,4,0],[41,6,4,0,"_coreTheming"],[41,18,4,0],[41,21,4,0,"require"],[41,28,4,0],[41,29,4,0,"_dependencyMap"],[41,43,4,0],[42,2,5,0],[42,6,5,0,"_stylesThemesV2Colors"],[42,27,5,0],[42,30,5,0,"require"],[42,37,5,0],[42,38,5,0,"_dependencyMap"],[42,52,5,0],[43,2,6,0],[43,6,6,0,"_utilsGetContrastingColor"],[43,31,6,0],[43,34,6,0,"require"],[43,41,6,0],[43,42,6,0,"_dependencyMap"],[43,56,6,0],[44,2,6,0],[44,6,6,0,"getContrastingColor"],[44,25,6,0],[44,28,6,0,"_interopDefault"],[44,43,6,0],[44,44,6,0,"_utilsGetContrastingColor"],[44,69,6,0],[45,2,1,0],[45,11,1,9,"_extends"],[45,19,1,17,"_extends"],[45,20,1,17],[45,22,1,20],[46,4,1,22],[46,11,1,29,"_extends"],[46,19,1,37],[46,22,1,40,"Object"],[46,28,1,46],[46,29,1,47,"assign"],[46,35,1,53],[46,38,1,56,"Object"],[46,44,1,62],[46,45,1,63,"assign"],[46,51,1,69],[46,52,1,70,"bind"],[46,56,1,74],[46,57,1,75],[46,58,1,76],[46,61,1,79],[46,71,1,89,"n"],[46,72,1,90],[46,74,1,92],[47,6,1,94],[47,11,1,99],[47,15,1,103,"e"],[47,16,1,104],[47,19,1,107],[47,20,1,108],[47,22,1,110,"e"],[47,23,1,111],[47,26,1,114,"arguments"],[47,35,1,123],[47,36,1,124,"length"],[47,42,1,130],[47,44,1,132,"e"],[47,45,1,133],[47,47,1,135],[47,49,1,137],[48,8,1,139],[48,12,1,143,"t"],[48,13,1,144],[48,16,1,147,"arguments"],[48,25,1,156],[48,26,1,157,"e"],[48,27,1,158],[48,28,1,159],[49,8,1,161],[49,13,1,166],[49,17,1,170,"r"],[49,18,1,171],[49,22,1,175,"t"],[49,23,1,176],[49,25,1,178],[49,26,1,179],[49,27,1,180],[49,28,1,181],[49,30,1,183,"hasOwnProperty"],[49,44,1,197],[49,45,1,198,"call"],[49,49,1,202],[49,50,1,203,"t"],[49,51,1,204],[49,53,1,206,"r"],[49,54,1,207],[49,55,1,208],[49,60,1,213,"n"],[49,61,1,214],[49,62,1,215,"r"],[49,63,1,216],[49,64,1,217],[49,67,1,220,"t"],[49,68,1,221],[49,69,1,222,"r"],[49,70,1,223],[49,71,1,224],[49,72,1,225],[50,6,1,227],[51,6,1,229],[51,13,1,236,"n"],[51,14,1,237],[52,4,1,239],[52,5,1,240],[52,7,1,242,"_extends"],[52,15,1,250],[52,16,1,251,"apply"],[52,21,1,256],[52,22,1,257],[52,26,1,261],[52,28,1,263,"arguments"],[52,37,1,272],[52,38,1,273],[53,2,1,275],[54,2,7,0],[54,8,7,6,"defaultSize"],[54,19,7,17],[54,22,7,20],[54,24,7,22],[55,2,8,0],[56,0,9,0],[57,0,10,0],[58,0,11,0],[59,0,12,0],[60,0,13,0],[61,0,14,0],[62,0,15,0],[63,0,16,0],[64,0,17,0],[65,0,18,0],[66,0,19,0],[67,0,20,0],[68,0,21,0],[69,0,22,0],[70,0,23,0],[71,2,24,0],[71,8,24,6,"Badge"],[71,13,24,11],[71,16,24,14,"Badge"],[71,17,24,15],[72,4,25,2,"children"],[72,12,25,10],[73,4,26,2,"size"],[73,8,26,6],[73,11,26,9,"defaultSize"],[73,22,26,20],[74,4,27,2,"style"],[74,9,27,7],[75,4,28,2,"theme"],[75,9,28,7],[75,11,28,9,"themeOverrides"],[75,25,28,23],[76,4,29,2,"visible"],[76,11,29,9],[76,14,29,12],[76,18,29,16],[77,4,30,2],[77,7,30,5,"rest"],[78,2,31,0],[78,3,31,1],[78,8,31,6],[79,4,32,2],[79,8,32,6,"_theme$colors"],[79,21,32,19],[80,4,33,2],[80,10,33,8,"theme"],[80,15,33,13],[80,18,33,16],[80,22,33,16,"useInternalTheme"],[80,34,33,32],[80,35,33,32,"useInternalTheme"],[80,51,33,32],[80,53,33,33,"themeOverrides"],[80,67,33,47],[80,68,33,48],[81,4,34,2],[81,10,34,8],[82,6,35,4,"current"],[82,13,35,11],[82,15,35,13,"opacity"],[83,4,36,2],[83,5,36,3],[83,8,36,6,"React"],[83,13,36,11],[83,14,36,12,"useRef"],[83,20,36,18],[83,21,36,19],[83,25,36,23,"Animated"],[83,33,36,31],[83,34,36,31,"default"],[83,41,36,31],[83,42,36,32,"Value"],[83,47,36,37],[83,48,36,38,"visible"],[83,55,36,45],[83,58,36,48],[83,59,36,49],[83,62,36,52],[83,63,36,53],[83,64,36,54],[83,65,36,55],[84,4,37,2],[84,10,37,8],[85,6,38,4,"fontScale"],[86,4,39,2],[86,5,39,3],[86,8,39,6],[86,12,39,6,"useWindowDimensions"],[86,31,39,25],[86,32,39,25,"default"],[86,39,39,25],[86,41,39,26],[86,42,39,27],[87,4,40,2],[87,10,40,8,"isFirstRendering"],[87,26,40,24],[87,29,40,27,"React"],[87,34,40,32],[87,35,40,33,"useRef"],[87,41,40,39],[87,42,40,40],[87,46,40,44],[87,47,40,45],[88,4,41,2],[88,10,41,8],[89,6,42,4,"animation"],[89,15,42,13],[89,17,42,15],[90,8,43,6,"scale"],[91,6,44,4],[92,4,45,2],[92,5,45,3],[92,8,45,6,"theme"],[92,13,45,11],[93,4,46,2,"React"],[93,9,46,7],[93,10,46,8,"useEffect"],[93,19,46,17],[93,20,46,18],[93,26,46,24],[94,6,47,4],[95,6,48,4],[95,10,48,8,"isFirstRendering"],[95,26,48,24],[95,27,48,25,"current"],[95,34,48,32],[95,36,48,34],[96,8,49,6,"isFirstRendering"],[96,24,49,22],[96,25,49,23,"current"],[96,32,49,30],[96,35,49,33],[96,40,49,38],[97,8,50,6],[98,6,51,4],[99,6,52,4,"Animated"],[99,14,52,12],[99,15,52,12,"default"],[99,22,52,12],[99,23,52,13,"timing"],[99,29,52,19],[99,30,52,20,"opacity"],[99,37,52,27],[99,39,52,29],[100,8,53,6,"toValue"],[100,15,53,13],[100,17,53,15,"visible"],[100,24,53,22],[100,27,53,25],[100,28,53,26],[100,31,53,29],[100,32,53,30],[101,8,54,6,"duration"],[101,16,54,14],[101,18,54,16],[101,21,54,19],[101,24,54,22,"scale"],[101,29,54,27],[102,8,55,6,"useNativeDriver"],[102,23,55,21],[102,25,55,23],[103,6,56,4],[103,7,56,5],[103,8,56,6],[103,9,56,7,"start"],[103,14,56,12],[103,15,56,13],[103,16,56,14],[104,4,57,2],[104,5,57,3],[104,7,57,5],[104,8,57,6,"visible"],[104,15,57,13],[104,17,57,15,"opacity"],[104,24,57,22],[104,26,57,24,"scale"],[104,31,57,29],[104,32,57,30],[104,33,57,31],[105,4,58,2],[105,10,58,8],[106,6,59,4,"backgroundColor"],[106,21,59,19],[106,24,59,22,"theme"],[106,29,59,27],[106,30,59,28,"isV3"],[106,34,59,32],[106,37,59,35,"theme"],[106,42,59,40],[106,43,59,41,"colors"],[106,49,59,47],[106,50,59,48,"error"],[106,55,59,53],[106,58,59,56],[106,59,59,57,"_theme$colors"],[106,72,59,70],[106,75,59,73,"theme"],[106,80,59,78],[106,81,59,79,"colors"],[106,87,59,85],[106,93,59,91],[106,97,59,95],[106,101,59,99,"_theme$colors"],[106,114,59,112],[106,119,59,117],[106,124,59,122],[106,125,59,123],[106,128,59,126],[106,133,59,131],[106,134,59,132],[106,137,59,135,"_theme$colors"],[106,150,59,148],[106,151,59,149,"notification"],[106,163,59,161],[107,6,60,4],[107,9,60,7,"restStyle"],[108,4,61,2],[108,5,61,3],[108,8,61,6,"StyleSheet"],[108,18,61,16],[108,19,61,16,"default"],[108,26,61,16],[108,27,61,17,"flatten"],[108,34,61,24],[108,35,61,25,"style"],[108,40,61,30],[108,41,61,31],[108,45,61,35],[108,46,61,36],[108,47,61,37],[109,4,62,2],[109,10,62,8,"textColor"],[109,19,62,17],[109,22,62,20,"theme"],[109,27,62,25],[109,28,62,26,"isV3"],[109,32,62,30],[109,35,62,33,"theme"],[109,40,62,38],[109,41,62,39,"colors"],[109,47,62,45],[109,48,62,46,"onError"],[109,55,62,53],[109,58,62,56],[109,62,62,56,"getContrastingColor"],[109,81,62,75],[109,82,62,75,"default"],[109,89,62,75],[109,91,62,76,"backgroundColor"],[109,106,62,91],[109,108,62,93,"white"],[109,129,62,98],[109,130,62,98,"white"],[109,135,62,98],[109,137,62,100,"black"],[109,158,62,105],[109,159,62,105,"black"],[109,164,62,105],[109,165,62,106],[110,4,63,2],[110,10,63,8,"borderRadius"],[110,22,63,20],[110,25,63,23,"size"],[110,29,63,27],[110,32,63,30],[110,33,63,31],[111,4,64,2],[111,10,64,8,"paddingHorizontal"],[111,27,64,25],[111,30,64,28,"theme"],[111,35,64,33],[111,36,64,34,"isV3"],[111,40,64,38],[111,43,64,41],[111,44,64,42],[111,47,64,45],[111,48,64,46],[112,4,65,2],[112,11,65,9],[112,24,65,22,"React"],[112,29,65,27],[112,30,65,28,"createElement"],[112,43,65,41],[112,44,65,42,"Animated"],[112,52,65,50],[112,53,65,50,"default"],[112,60,65,50],[112,61,65,51,"Text"],[112,65,65,55],[112,67,65,57,"_extends"],[112,75,65,65],[112,76,65,66],[113,6,66,4,"numberOfLines"],[113,19,66,17],[113,21,66,19],[113,22,66,20],[114,6,67,4,"style"],[114,11,67,9],[114,13,67,11],[114,14,67,12],[115,8,68,6,"opacity"],[115,15,68,13],[116,8,69,6,"backgroundColor"],[116,23,69,21],[117,8,70,6,"color"],[117,13,70,11],[117,15,70,13,"textColor"],[117,24,70,22],[118,8,71,6,"fontSize"],[118,16,71,14],[118,18,71,16,"size"],[118,22,71,20],[118,25,71,23],[118,28,71,26],[119,8,72,6],[119,12,72,10],[119,13,72,11,"theme"],[119,18,72,16],[119,19,72,17,"isV3"],[119,23,72,21],[119,27,72,25,"theme"],[119,32,72,30],[119,33,72,31,"fonts"],[119,38,72,36],[119,39,72,37,"regular"],[119,46,72,44],[119,47,72,45],[120,8,73,6,"lineHeight"],[120,18,73,16],[120,20,73,18,"size"],[120,24,73,22],[120,27,73,25,"fontScale"],[120,36,73,34],[121,8,74,6,"height"],[121,14,74,12],[121,16,74,14,"size"],[121,20,74,18],[122,8,75,6,"minWidth"],[122,16,75,14],[122,18,75,16,"size"],[122,22,75,20],[123,8,76,6,"borderRadius"],[123,20,76,18],[124,8,77,6,"paddingHorizontal"],[125,6,78,4],[125,7,78,5],[125,9,78,7,"styles"],[125,15,78,13],[125,16,78,14,"container"],[125,25,78,23],[125,27,78,25,"restStyle"],[125,36,78,34],[126,4,79,2],[126,5,79,3],[126,7,79,5,"rest"],[126,11,79,9],[126,12,79,10],[126,14,79,12,"children"],[126,22,79,20],[126,23,79,21],[127,2,80,0],[127,3,80,1],[128,2,81,0],[128,6,81,0,"_default"],[128,14,81,0],[128,17,81,15,"Badge"],[128,22,81,20],[129,2,82,0],[129,8,82,6,"styles"],[129,14,82,12],[129,17,82,15,"StyleSheet"],[129,27,82,25],[129,28,82,25,"default"],[129,35,82,25],[129,36,82,26,"create"],[129,42,82,32],[129,43,82,33],[130,4,83,2,"container"],[130,13,83,11],[130,15,83,13],[131,6,84,4,"alignSelf"],[131,15,84,13],[131,17,84,15],[131,27,84,25],[132,6,85,4,"textAlign"],[132,15,85,13],[132,17,85,15],[132,25,85,23],[133,6,86,4,"textAlignVertical"],[133,23,86,21],[133,25,86,23],[133,33,86,31],[134,6,87,4,"overflow"],[134,14,87,12],[134,16,87,14],[135,4,88,2],[136,2,89,0],[136,3,89,1],[136,4,89,2],[137,0,89,3],[137,3]],"functionMap":{"names":["_extends","<anonymous>","<global>","Badge","React.useEffect$argument_0"],"mappings":"AAA,+EC,iKD,oCE;cCuB;kBCsB;GDW;CDuB"},"hasCjsExports":false},"type":"js/module"}]}