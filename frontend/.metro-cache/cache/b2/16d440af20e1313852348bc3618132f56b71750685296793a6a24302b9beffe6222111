{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":36,"index":178},"end":{"line":7,"column":52,"index":194}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.ListAccordionGroupContext = void 0;\n  var React = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  function _interopRequireWildcard(e, t) {\n    if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n      n = new WeakMap();\n    return (_interopRequireWildcard = function (e, t) {\n      if (!t && e && e.__esModule) return e;\n      var o,\n        i,\n        f = {\n          __proto__: null,\n          default: e\n        };\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f;\n      if (o = t ? n : r) {\n        if (o.has(e)) return o.get(e);\n        o.set(e, f);\n      }\n      for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]);\n      return f;\n    })(e, t);\n  }\n  const ListAccordionGroupContext = exports.ListAccordionGroupContext = /*#__PURE__*/React.createContext(null);\n\n  /**\n   * List.AccordionGroup allows to control a group of List Accordions. `id` prop for List.Accordion is required in order for group to work.\n   * List.AccordionGroup can be a controlled or uncontrolled component. The example shows the uncontrolled version.\n   * At most one Accordion can be expanded at a given time.\n   *\n   * ## Usage\n   * ```js\n   * import * as React from 'react';\n   * import { View, Text } from 'react-native';\n   * import { List } from 'react-native-paper';\n   *\n   * const MyComponent = () => (\n   *   <List.AccordionGroup>\n   *     <List.Accordion title=\"Accordion 1\" id=\"1\">\n   *       <List.Item title=\"Item 1\" />\n   *     </List.Accordion>\n   *     <List.Accordion title=\"Accordion 2\" id=\"2\">\n   *       <List.Item title=\"Item 2\" />\n   *     </List.Accordion>\n   *     <View>\n   *       <Text>\n   *         List.Accordion can be wrapped because implementation uses React.Context.\n   *       </Text>\n   *       <List.Accordion title=\"Accordion 3\" id=\"3\">\n   *         <List.Item title=\"Item 3\" />\n   *       </List.Accordion>\n   *     </View>\n   *   </List.AccordionGroup>\n   * );\n   *\n   * export default MyComponent;\n   *```\n   */\n  const ListAccordionGroup = ({\n    expandedId: expandedIdProp,\n    onAccordionPress,\n    children\n  }) => {\n    const [expandedId, setExpandedId] = React.useState(undefined);\n    const onAccordionPressDefault = newExpandedId => {\n      setExpandedId(currentExpandedId => currentExpandedId === newExpandedId ? undefined : newExpandedId);\n    };\n    return /*#__PURE__*/React.createElement(ListAccordionGroupContext.Provider, {\n      value: {\n        expandedId: expandedIdProp || expandedId,\n        // component can be controlled or uncontrolled\n        onAccordionPress: onAccordionPress || onAccordionPressDefault\n      }\n    }, children);\n  };\n  ListAccordionGroup.displayName = 'List.AccordionGroup';\n  var _default = exports.default = ListAccordionGroup;\n});","lineCount":83,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18,"exports"],[7,27,6,25],[7,28,6,26,"ListAccordionGroupContext"],[7,53,6,51],[7,56,6,54],[7,61,6,59],[7,62,6,60],[8,2,7,0],[8,6,7,4,"React"],[8,11,7,9],[8,14,7,12,"_interopRequireWildcard"],[8,37,7,35],[8,38,7,36,"require"],[8,45,7,43],[8,46,7,43,"_dependencyMap"],[8,60,7,43],[8,72,7,51],[8,73,7,52],[8,74,7,53],[9,2,8,0],[9,11,8,9,"_interopRequireWildcard"],[9,34,8,32,"_interopRequireWildcard"],[9,35,8,33,"e"],[9,36,8,34],[9,38,8,36,"t"],[9,39,8,37],[9,41,8,39],[10,4,8,41],[10,8,8,45],[10,18,8,55],[10,22,8,59],[10,29,8,66,"WeakMap"],[10,36,8,73],[10,38,8,75],[10,42,8,79,"r"],[10,43,8,80],[10,46,8,83],[10,50,8,87,"WeakMap"],[10,57,8,94],[10,58,8,95],[10,59,8,96],[11,6,8,98,"n"],[11,7,8,99],[11,10,8,102],[11,14,8,106,"WeakMap"],[11,21,8,113],[11,22,8,114],[11,23,8,115],[12,4,8,117],[12,11,8,124],[12,12,8,125,"_interopRequireWildcard"],[12,35,8,148],[12,38,8,151],[12,47,8,151,"_interopRequireWildcard"],[12,48,8,161,"e"],[12,49,8,162],[12,51,8,164,"t"],[12,52,8,165],[12,54,8,167],[13,6,8,169],[13,10,8,173],[13,11,8,174,"t"],[13,12,8,175],[13,16,8,179,"e"],[13,17,8,180],[13,21,8,184,"e"],[13,22,8,185],[13,23,8,186,"__esModule"],[13,33,8,196],[13,35,8,198],[13,42,8,205,"e"],[13,43,8,206],[14,6,8,208],[14,10,8,212,"o"],[14,11,8,213],[15,8,8,215,"i"],[15,9,8,216],[16,8,8,218,"f"],[16,9,8,219],[16,12,8,222],[17,10,8,224,"__proto__"],[17,19,8,233],[17,21,8,235],[17,25,8,239],[18,10,8,241,"default"],[18,17,8,248],[18,19,8,250,"e"],[19,8,8,252],[19,9,8,253],[20,6,8,255],[20,10,8,259],[20,14,8,263],[20,19,8,268,"e"],[20,20,8,269],[20,24,8,273],[20,32,8,281],[20,36,8,285],[20,43,8,292,"e"],[20,44,8,293],[20,48,8,297],[20,58,8,307],[20,62,8,311],[20,69,8,318,"e"],[20,70,8,319],[20,72,8,321],[20,79,8,328,"f"],[20,80,8,329],[21,6,8,331],[21,10,8,335,"o"],[21,11,8,336],[21,14,8,339,"t"],[21,15,8,340],[21,18,8,343,"n"],[21,19,8,344],[21,22,8,347,"r"],[21,23,8,348],[21,25,8,350],[22,8,8,352],[22,12,8,356,"o"],[22,13,8,357],[22,14,8,358,"has"],[22,17,8,361],[22,18,8,362,"e"],[22,19,8,363],[22,20,8,364],[22,22,8,366],[22,29,8,373,"o"],[22,30,8,374],[22,31,8,375,"get"],[22,34,8,378],[22,35,8,379,"e"],[22,36,8,380],[22,37,8,381],[23,8,8,383,"o"],[23,9,8,384],[23,10,8,385,"set"],[23,13,8,388],[23,14,8,389,"e"],[23,15,8,390],[23,17,8,392,"f"],[23,18,8,393],[23,19,8,394],[24,6,8,396],[25,6,8,398],[25,11,8,403],[25,17,8,409,"t"],[25,18,8,410],[25,22,8,414,"e"],[25,23,8,415],[25,25,8,417],[25,34,8,426],[25,39,8,431,"t"],[25,40,8,432],[25,44,8,436],[25,45,8,437],[25,46,8,438],[25,47,8,439,"hasOwnProperty"],[25,61,8,453],[25,62,8,454,"call"],[25,66,8,458],[25,67,8,459,"e"],[25,68,8,460],[25,70,8,462,"t"],[25,71,8,463],[25,72,8,464],[25,77,8,469],[25,78,8,470,"i"],[25,79,8,471],[25,82,8,474],[25,83,8,475,"o"],[25,84,8,476],[25,87,8,479,"Object"],[25,93,8,485],[25,94,8,486,"defineProperty"],[25,108,8,500],[25,113,8,505,"Object"],[25,119,8,511],[25,120,8,512,"getOwnPropertyDescriptor"],[25,144,8,536],[25,145,8,537,"e"],[25,146,8,538],[25,148,8,540,"t"],[25,149,8,541],[25,150,8,542],[25,156,8,548,"i"],[25,157,8,549],[25,158,8,550,"get"],[25,161,8,553],[25,165,8,557,"i"],[25,166,8,558],[25,167,8,559,"set"],[25,170,8,562],[25,171,8,563],[25,174,8,566,"o"],[25,175,8,567],[25,176,8,568,"f"],[25,177,8,569],[25,179,8,571,"t"],[25,180,8,572],[25,182,8,574,"i"],[25,183,8,575],[25,184,8,576],[25,187,8,579,"f"],[25,188,8,580],[25,189,8,581,"t"],[25,190,8,582],[25,191,8,583],[25,194,8,586,"e"],[25,195,8,587],[25,196,8,588,"t"],[25,197,8,589],[25,198,8,590],[25,199,8,591],[26,6,8,593],[26,13,8,600,"f"],[26,14,8,601],[27,4,8,603],[27,5,8,604],[27,7,8,606,"e"],[27,8,8,607],[27,10,8,609,"t"],[27,11,8,610],[27,12,8,611],[28,2,8,613],[29,2,9,0],[29,8,9,6,"ListAccordionGroupContext"],[29,33,9,31],[29,36,9,34,"exports"],[29,43,9,41],[29,44,9,42,"ListAccordionGroupContext"],[29,69,9,67],[29,72,9,70],[29,85,9,83,"React"],[29,90,9,88],[29,91,9,89,"createContext"],[29,104,9,102],[29,105,9,103],[29,109,9,107],[29,110,9,108],[31,2,11,0],[32,0,12,0],[33,0,13,0],[34,0,14,0],[35,0,15,0],[36,0,16,0],[37,0,17,0],[38,0,18,0],[39,0,19,0],[40,0,20,0],[41,0,21,0],[42,0,22,0],[43,0,23,0],[44,0,24,0],[45,0,25,0],[46,0,26,0],[47,0,27,0],[48,0,28,0],[49,0,29,0],[50,0,30,0],[51,0,31,0],[52,0,32,0],[53,0,33,0],[54,0,34,0],[55,0,35,0],[56,0,36,0],[57,0,37,0],[58,0,38,0],[59,0,39,0],[60,0,40,0],[61,0,41,0],[62,0,42,0],[63,0,43,0],[64,2,44,0],[64,8,44,6,"ListAccordionGroup"],[64,26,44,24],[64,29,44,27,"ListAccordionGroup"],[64,30,44,28],[65,4,45,2,"expandedId"],[65,14,45,12],[65,16,45,14,"expandedIdProp"],[65,30,45,28],[66,4,46,2,"onAccordionPress"],[66,20,46,18],[67,4,47,2,"children"],[68,2,48,0],[68,3,48,1],[68,8,48,6],[69,4,49,2],[69,10,49,8],[69,11,49,9,"expandedId"],[69,21,49,19],[69,23,49,21,"setExpandedId"],[69,36,49,34],[69,37,49,35],[69,40,49,38,"React"],[69,45,49,43],[69,46,49,44,"useState"],[69,54,49,52],[69,55,49,53,"undefined"],[69,64,49,62],[69,65,49,63],[70,4,50,2],[70,10,50,8,"onAccordionPressDefault"],[70,33,50,31],[70,36,50,34,"newExpandedId"],[70,49,50,47],[70,53,50,51],[71,6,51,4,"setExpandedId"],[71,19,51,17],[71,20,51,18,"currentExpandedId"],[71,37,51,35],[71,41,51,39,"currentExpandedId"],[71,58,51,56],[71,63,51,61,"newExpandedId"],[71,76,51,74],[71,79,51,77,"undefined"],[71,88,51,86],[71,91,51,89,"newExpandedId"],[71,104,51,102],[71,105,51,103],[72,4,52,2],[72,5,52,3],[73,4,53,2],[73,11,53,9],[73,24,53,22,"React"],[73,29,53,27],[73,30,53,28,"createElement"],[73,43,53,41],[73,44,53,42,"ListAccordionGroupContext"],[73,69,53,67],[73,70,53,68,"Provider"],[73,78,53,76],[73,80,53,78],[74,6,54,4,"value"],[74,11,54,9],[74,13,54,11],[75,8,55,6,"expandedId"],[75,18,55,16],[75,20,55,18,"expandedIdProp"],[75,34,55,32],[75,38,55,36,"expandedId"],[75,48,55,46],[76,8,56,6],[77,8,57,6,"onAccordionPress"],[77,24,57,22],[77,26,57,24,"onAccordionPress"],[77,42,57,40],[77,46,57,44,"onAccordionPressDefault"],[78,6,58,4],[79,4,59,2],[79,5,59,3],[79,7,59,5,"children"],[79,15,59,13],[79,16,59,14],[80,2,60,0],[80,3,60,1],[81,2,61,0,"ListAccordionGroup"],[81,20,61,18],[81,21,61,19,"displayName"],[81,32,61,30],[81,35,61,33],[81,56,61,54],[82,2,62,0],[82,6,62,4,"_default"],[82,14,62,12],[82,17,62,15,"exports"],[82,24,62,22],[82,25,62,23,"default"],[82,32,62,30],[82,35,62,33,"ListAccordionGroup"],[82,53,62,51],[83,0,62,52],[83,3]],"functionMap":{"names":["<global>","_interopRequireWildcard","ListAccordionGroup","onAccordionPressDefault","setExpandedId$argument_0"],"mappings":"AAA;ACO,smBD;2BEoC;kCCM;kBCC,oFD;GDC;CFQ"},"hasCjsExports":true},"type":"js/module"}]}